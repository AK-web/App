diff --git a/node_modules/react-native-vision-camera/ios/RNCameraView.mm b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
index b6e7f6d..440b5af 100644
--- a/node_modules/react-native-vision-camera/ios/RNCameraView.mm
+++ b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
@@ -34,26 +34,45 @@ using namespace facebook::react;
     return concreteComponentDescriptorProvider<CameraViewComponentDescriptor>();
 }
 
+
+- (void) initCamera {
+    static const auto defaultProps = std::make_shared<const CameraViewProps>();
+    _props = defaultProps;
+
+    // The remaining part of the initializer is standard bjective-C code to create views and layout them with utoLayout. Here we can change whatever we want to.
+    _view = [[CameraView alloc] init];
+    _view.delegate = self;
+
+    self.contentView = _view;
+}
+
 - (instancetype)initWithFrame:(CGRect)frame
 {
     self = [super initWithFrame:frame];
     if (self) {
-        static const auto defaultProps = std::make_shared<const CameraViewProps>();
-        _props = defaultProps;
-
-        // The remaining part of the initializer is standard Objective-C code to create views and layout them with AutoLayout. Here we can change whatever we want to.
-        _view = [[CameraView alloc] init];
-        _view.delegate = self;
-
-        self.contentView = _view;
+        [self initCamera];
     }
 
     return self;
 }
 
+- (void) prepareForRecycle {
+    [super prepareForRecycle];
+
+    self.contentView = _view;
+    _view.delegate = nil;
+    _view = nil;
+    self.contentView = nil;
+}
+
+
 // why we need this func -> https://reactnative.dev/docs/next/the-new-architecture/pillars-fabric-components#write-the-native-ios-code
 - (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &)oldProps
 {
+    if (_view == nil) {
+      [self initCamera];
+    }
+
     const auto &newViewProps = *std::static_pointer_cast<CameraViewProps const>(props);
     const auto &oldViewProps = *std::static_pointer_cast<CameraViewProps const>(_props);
 
