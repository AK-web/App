diff --git a/node_modules/@react-navigation/native/CHANGELOG.md b/node_modules/@react-navigation/native/CHANGELOG.md
new file mode 100644
index 0000000..08a3601
--- /dev/null
+++ b/node_modules/@react-navigation/native/CHANGELOG.md
@@ -0,0 +1,1127 @@
+# Change Log
+
+All notable changes to this project will be documented in this file.
+See [Conventional Commits](https://conventionalcommits.org) for commit guidelines.
+
+## [7.1.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.9...@react-navigation/native@7.1.10) (2025-05-30)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.1.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.8...@react-navigation/native@7.1.9) (2025-05-11)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.1.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.7...@react-navigation/native@7.1.8) (2025-05-04)
+
+### Bug Fixes
+
+* fix peer dep versions. closes [#12580](https://github.com/react-navigation/react-navigation/issues/12580) ([6fc3dd6](https://github.com/react-navigation/react-navigation/commit/6fc3dd677aecdcf8696fe723e17b9c028de7ad85)) - by @satya164
+
+## [7.1.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.6...@react-navigation/native@7.1.7) (2025-05-02)
+
+### Bug Fixes
+
+* fix issues with browser history ([#12553](https://github.com/react-navigation/react-navigation/issues/12553)) ([7d01b03](https://github.com/react-navigation/react-navigation/commit/7d01b032af05290492869cb15632857d8cb92cc6)) - by @adamgrzybowski
+* use aria props instead of accessibilityX ([#11848](https://github.com/react-navigation/react-navigation/issues/11848)) ([347ca97](https://github.com/react-navigation/react-navigation/commit/347ca975406e84a5e7452679b1dde7b9ecca1a22)) - by @satya164
+
+## [7.1.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.5...@react-navigation/native@7.1.6) (2025-04-08)
+
+### Bug Fixes
+
+* add types field back to support legacy moduleResolution ([6c021d4](https://github.com/react-navigation/react-navigation/commit/6c021d442ede3a231e32486b2c391c2e850bf76e)), closes [#12534](https://github.com/react-navigation/react-navigation/issues/12534) - by @
+
+## [7.1.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.4...@react-navigation/native@7.1.5) (2025-04-04)
+
+### Bug Fixes
+
+* drop commonjs module to avoid dual package hazard ([f0fbcc5](https://github.com/react-navigation/react-navigation/commit/f0fbcc5515e73b454f607bd95bba40a48e852d0f)) - by @satya164
+
+## [7.1.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.3...@react-navigation/native@7.1.4) (2025-04-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.1.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.2...@react-navigation/native@7.1.3) (2025-04-02)
+
+### Bug Fixes
+
+* make buildHref work inside route context ([a52efa1](https://github.com/react-navigation/react-navigation/commit/a52efa1334b8f1f2efe89def964f432895dadc6d)) - by @
+
+## [7.1.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.1...@react-navigation/native@7.1.2) (2025-04-02)
+
+### Bug Fixes
+
+* make buildHref work inside screens of a navigator ([18387b8](https://github.com/react-navigation/react-navigation/commit/18387b87a1aeea67945e0387ac068a2e0cabe592)) - by @
+* revert always create link regardless of linking enabled ([400f0d8](https://github.com/react-navigation/react-navigation/commit/400f0d816fcc93b578e2dad6e0d9e7a1952d8045)) - by @
+
+## [7.1.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.1.0...@react-navigation/native@7.1.1) (2025-04-02)
+
+### Bug Fixes
+
+* fix buildHref returning incorrect path ([60b0d75](https://github.com/react-navigation/react-navigation/commit/60b0d75f6a6ebb67d7fdbe6bfb295285fb1b7b3d)) - by @
+
+# [7.1.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.19...@react-navigation/native@7.1.0) (2025-04-01)
+
+### Bug Fixes
+
+* always create link regardless of linking enabled status ([d242d73](https://github.com/react-navigation/react-navigation/commit/d242d731bfcc1f3951d920f1dc30502409a62e4c)) - by @
+* handle undefined event in useLinkProps ([2ede378](https://github.com/react-navigation/react-navigation/commit/2ede378bff1bba947202697cbe0f796fbf76e0e6)), closes [#12526](https://github.com/react-navigation/react-navigation/issues/12526) - by @satya164
+
+### Features
+
+* add a useRoutePath hook ([61e3561](https://github.com/react-navigation/react-navigation/commit/61e356100678f43874fb11e64de11c0da22c4695)) - by @
+* add an API to get a minimal state to build a path ([1320931](https://github.com/react-navigation/react-navigation/commit/1320931d3cd02c8bfe2a9493b4ec18c870be4f22)) - by @
+
+## [7.0.19](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.18...@react-navigation/native@7.0.19) (2025-03-25)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.18](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.17...@react-navigation/native@7.0.18) (2025-03-22)
+
+### Bug Fixes
+
+* fix JSX and useScrollToTop types for React 19 compatibility ([#12501](https://github.com/react-navigation/react-navigation/issues/12501)) ([4a7dfe1](https://github.com/react-navigation/react-navigation/commit/4a7dfe1f9b6dac66ea0651bf69dc9f5835dcd838)), closes [#12468](https://github.com/react-navigation/react-navigation/issues/12468) - by @teaualune
+
+## [7.0.17](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.16...@react-navigation/native@7.0.17) (2025-03-19)
+
+### Bug Fixes
+
+* revert types for screen & params pair ([154b90c](https://github.com/react-navigation/react-navigation/commit/154b90cd86d4231b6f1d68738f22541c18d5f9df)), closes [/github.com/react-navigation/react-navigation/commit/a528b9b407dbaeaac0caae8edcb5b3c6840144fa#diff-9c2709d8522a6b9ec9697dd54c966da28deee393cc5effe69b47fdf93a2dbc5](https://github.com//github.com/react-navigation/react-navigation/commit/a528b9b407dbaeaac0caae8edcb5b3c6840144fa/issues/diff-9c2709d8522a6b9ec9697dd54c966da28deee393cc5effe69b47fdf93a2dbc5) [#12372](https://github.com/react-navigation/react-navigation/issues/12372) - by @satya164
+
+## [7.0.16](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.15...@react-navigation/native@7.0.16) (2025-03-19)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.15](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.14...@react-navigation/native@7.0.15) (2025-03-02)
+
+### Bug Fixes
+
+* make locale available in container fallback ([bddcc44](https://github.com/react-navigation/react-navigation/commit/bddcc44ab0e0ad5630f7ee0feb69496412a00217)) - by @satya164
+* pop for deep links to screens containing navigators ([05d2d97](https://github.com/react-navigation/react-navigation/commit/05d2d97157ac1abf17957ee402634aa651b053ba)) - by @satya164
+
+## [7.0.14](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.13...@react-navigation/native@7.0.14) (2024-12-12)
+
+### Bug Fixes
+
+* correctly extract path from url with multiple `?` characters ([#12334](https://github.com/react-navigation/react-navigation/issues/12334)) ([234d07d](https://github.com/react-navigation/react-navigation/commit/234d07d37066d831be0f356c8766b03ec094a90f)) - by @andrejpavlovic
+* nanoid vulberable version ([#12328](https://github.com/react-navigation/react-navigation/issues/12328)) ([2a745c8](https://github.com/react-navigation/react-navigation/commit/2a745c8c598f95fcec5bbf5442045478d4046663)) - by @khushilms
+
+## [7.0.13](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.12...@react-navigation/native@7.0.13) (2024-12-02)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.12](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.11...@react-navigation/native@7.0.12) (2024-12-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.11](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.10...@react-navigation/native@7.0.11) (2024-12-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.9...@react-navigation/native@7.0.10) (2024-12-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.8...@react-navigation/native@7.0.9) (2024-11-28)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.7...@react-navigation/native@7.0.8) (2024-11-27)
+
+### Bug Fixes
+
+* fix linking.enable: auto not working with only groups ([1129071](https://github.com/react-navigation/react-navigation/commit/1129071c6f406d89138dff6154335f18bac8b6d7)) - by @satya164
+
+## [7.0.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.6...@react-navigation/native@7.0.7) (2024-11-26)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.5...@react-navigation/native@7.0.6) (2024-11-25)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.4...@react-navigation/native@7.0.5) (2024-11-25)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.3...@react-navigation/native@7.0.4) (2024-11-22)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.2...@react-navigation/native@7.0.3) (2024-11-15)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.1...@react-navigation/native@7.0.2) (2024-11-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [7.0.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0...@react-navigation/native@7.0.1) (2024-11-13)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.21...@react-navigation/native@7.0.0) (2024-11-06)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.21](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.20...@react-navigation/native@7.0.0-rc.21) (2024-10-24)
+
+### Bug Fixes
+
+* use * for react-native peer dep to support pre-release versions ([07267e5](https://github.com/react-navigation/react-navigation/commit/07267e54be752f600f808ec2898e5d76a1bc1d43)) - by @satya164
+
+# [7.0.0-rc.20](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.19...@react-navigation/native@7.0.0-rc.20) (2024-10-11)
+
+### Bug Fixes
+
+* fix type error when using useScrollToTop with FlatList ([#12140](https://github.com/react-navigation/react-navigation/issues/12140)) ([a1f947a](https://github.com/react-navigation/react-navigation/commit/a1f947a44f16a8d846c31d76efb0485780bd8de3)), closes [#12139](https://github.com/react-navigation/react-navigation/issues/12139) - by @itsramiel
+
+### Features
+
+* export LocaleDirContext and UNSTABLE_UnhandledLinkingContext ([#12145](https://github.com/react-navigation/react-navigation/issues/12145)) ([4caf3cb](https://github.com/react-navigation/react-navigation/commit/4caf3cb849a8708a36d0dbf22dac432d2ca780be)) - by @marklawlor
+
+# [7.0.0-rc.19](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.18...@react-navigation/native@7.0.0-rc.19) (2024-09-08)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.18](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.17...@react-navigation/native@7.0.0-rc.18) (2024-08-07)
+
+### Bug Fixes
+
+* improve how navigate and other methods are typed ([#12093](https://github.com/react-navigation/react-navigation/issues/12093)) ([a528b9b](https://github.com/react-navigation/react-navigation/commit/a528b9b407dbaeaac0caae8edcb5b3c6840144fa)) - by @satya164
+
+# [7.0.0-rc.17](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.16...@react-navigation/native@7.0.0-rc.17) (2024-08-05)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.16](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.15...@react-navigation/native@7.0.0-rc.16) (2024-08-02)
+
+### Bug Fixes
+
+* add missing useLinkTo export ([#12081](https://github.com/react-navigation/react-navigation/issues/12081)) ([17e2777](https://github.com/react-navigation/react-navigation/commit/17e277794c8364eb3c262a824156a9753a4a6457)) - by @export-mike
+
+# [7.0.0-rc.15](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.14...@react-navigation/native@7.0.0-rc.15) (2024-08-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.14](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.13...@react-navigation/native@7.0.0-rc.14) (2024-07-19)
+
+### Bug Fixes
+
+* support theming in NavigationContainer fallback ([71e02f5](https://github.com/react-navigation/react-navigation/commit/71e02f52a7945c8ac6b77da67352e227367663d4)) - by @satya164
+
+# [7.0.0-rc.13](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.12...@react-navigation/native@7.0.0-rc.13) (2024-07-12)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.12](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.11...@react-navigation/native@7.0.0-rc.12) (2024-07-11)
+
+### Bug Fixes
+
+* upgrade react-native-builder-bob ([1575287](https://github.com/react-navigation/react-navigation/commit/1575287d40fadb97f33eb19c2914d8be3066b47a)) - by @
+
+# [7.0.0-rc.11](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.10...@react-navigation/native@7.0.0-rc.11) (2024-07-11)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.9...@react-navigation/native@7.0.0-rc.10) (2024-07-10)
+
+### Bug Fixes
+
+* bump use-latest-callback to fix require ([40ddae9](https://github.com/react-navigation/react-navigation/commit/40ddae95fbbf84ff47f3447eef50ed9ddb66cab8)) - by @satya164
+
+# [7.0.0-rc.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.8...@react-navigation/native@7.0.0-rc.9) (2024-07-08)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.7...@react-navigation/native@7.0.0-rc.8) (2024-07-07)
+
+### Bug Fixes
+
+* upgrade use-latest-callback for esm compat ([187d41b](https://github.com/react-navigation/react-navigation/commit/187d41b3a139fe2a075a7809c0c4088cbd2fafdb)) - by @satya164
+
+# [7.0.0-rc.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.6...@react-navigation/native@7.0.0-rc.7) (2024-07-04)
+
+### Bug Fixes
+
+* fix published files ([829caa0](https://github.com/react-navigation/react-navigation/commit/829caa019e125811eea5213fd380e8e1bdbe7030)) - by @
+
+# [7.0.0-rc.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.5...@react-navigation/native@7.0.0-rc.6) (2024-07-04)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.4...@react-navigation/native@7.0.0-rc.5) (2024-07-04)
+
+### Features
+
+* add package.json exports field ([1435cfe](https://github.com/react-navigation/react-navigation/commit/1435cfe3300767c221ebd4613479ad662d61efee)) - by @
+
+# [7.0.0-rc.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.3...@react-navigation/native@7.0.0-rc.4) (2024-07-01)
+
+### Bug Fixes
+
+* stop using react-native field in package.json ([efc33cb](https://github.com/react-navigation/react-navigation/commit/efc33cb0c4830a84ceae034dc1278c54f1faf32d)) - by @
+
+# [7.0.0-rc.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.2...@react-navigation/native@7.0.0-rc.3) (2024-06-29)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.1...@react-navigation/native@7.0.0-rc.2) (2024-06-28)
+
+### Bug Fixes
+
+* fix types for Link & Button components ([bc9d628](https://github.com/react-navigation/react-navigation/commit/bc9d628efab9ab9986dc38a0ba2868d0fbe64b49)) - by @
+
+# [7.0.0-rc.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-rc.0...@react-navigation/native@7.0.0-rc.1) (2024-06-28)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-rc.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.18...@react-navigation/native@7.0.0-rc.0) (2024-06-27)
+
+### Bug Fixes
+
+* remove global in favor of globalThis for better compatibility ([#11976](https://github.com/react-navigation/react-navigation/issues/11976)) ([f497491](https://github.com/react-navigation/react-navigation/commit/f4974919242e7531ddd16da7b6bbf5e9ecfddc4c)) - by @natew
+
+# [7.0.0-alpha.18](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.17...@react-navigation/native@7.0.0-alpha.18) (2024-03-22)
+
+### Bug Fixes
+
+* accept partial linking.config for static navigation ([3825046](https://github.com/react-navigation/react-navigation/commit/3825046a2320b721b7458dcc5441807bf57ea091)) - by @satya164
+
+### Features
+
+* add automatic home screen detection for auto linking ([b0bec6f](https://github.com/react-navigation/react-navigation/commit/b0bec6fb3eda83f145d123f02fb2096fa2300658)) - by @satya164
+
+# [7.0.0-alpha.17](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.16...@react-navigation/native@7.0.0-alpha.17) (2024-03-22)
+
+### Features
+
+* add a way to automatically generate linking config ([d090836](https://github.com/react-navigation/react-navigation/commit/d090836f34bee659f4ea08176d6840703ef7247f)) - by @satya164
+* automatically enable linking if any config is specified ([c91d247](https://github.com/react-navigation/react-navigation/commit/c91d247e62d8b30d8f55abff784df81616e70580)) - by @satya164
+
+# [7.0.0-alpha.16](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.15...@react-navigation/native@7.0.0-alpha.16) (2024-03-20)
+
+### Features
+
+* add getStateForRouteNamesChange to all navigators and mark it as unstable ([4edbb07](https://github.com/react-navigation/react-navigation/commit/4edbb071163742b60499178271fd3e3e92fb4002)) - by @satya164
+
+# [7.0.0-alpha.15](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.14...@react-navigation/native@7.0.0-alpha.15) (2024-03-14)
+
+### Features
+
+* automatically infer types for navigation in options, listeners etc. ([#11883](https://github.com/react-navigation/react-navigation/issues/11883)) ([c54baf1](https://github.com/react-navigation/react-navigation/commit/c54baf14640e567be10cb8a5f68e5cbf0b35f120)) - by @satya164
+
+# [7.0.0-alpha.14](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.13...@react-navigation/native@7.0.0-alpha.14) (2024-03-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-alpha.13](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.12...@react-navigation/native@7.0.0-alpha.13) (2024-03-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-alpha.12](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.11...@react-navigation/native@7.0.0-alpha.12) (2024-03-08)
+
+### Bug Fixes
+
+* preserve # in the URL if the screen hasn't changed ([#11876](https://github.com/react-navigation/react-navigation/issues/11876)) ([66cc899](https://github.com/react-navigation/react-navigation/commit/66cc899e2d9264903ed8800980711c619bb3b499)) - by @groot007
+
+# [7.0.0-alpha.11](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.10...@react-navigation/native@7.0.0-alpha.11) (2024-03-04)
+
+### Bug Fixes
+
+* fix forwarding ref for static navigation ([83921e9](https://github.com/react-navigation/react-navigation/commit/83921e9edfc03d034567456b98fe856f0148f4f4)) - by @satya164
+
+# [7.0.0-alpha.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.9...@react-navigation/native@7.0.0-alpha.10) (2024-02-24)
+
+### Bug Fixes
+
+* fix peer dependency versions ([4b93b63](https://github.com/react-navigation/react-navigation/commit/4b93b6335ce180fe879f9fbe8f2400426b5484fb)) - by @
+
+# [7.0.0-alpha.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.8...@react-navigation/native@7.0.0-alpha.9) (2024-02-23)
+
+### Bug Fixes
+
+* browser navigating out after using back feature and going home ([#11833](https://github.com/react-navigation/react-navigation/issues/11833)) ([8745ea5](https://github.com/react-navigation/react-navigation/commit/8745ea55dc687a88f741d7f51ea911b891cfd083)), closes [#11832](https://github.com/react-navigation/react-navigation/issues/11832) - by @SlickDomique
+* type errors when getState used outside of a screen ([#11827](https://github.com/react-navigation/react-navigation/issues/11827)) ([b3512a5](https://github.com/react-navigation/react-navigation/commit/b3512a5aa7fdcdac0ea3f23acda33b0cbce270e1)), closes [#11701](https://github.com/react-navigation/react-navigation/issues/11701) - by @MrRefactor
+
+# [7.0.0-alpha.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.7...@react-navigation/native@7.0.0-alpha.8) (2024-02-23)
+
+### Bug Fixes
+
+* forward ref for static navigation ([f6b99b1](https://github.com/react-navigation/react-navigation/commit/f6b99b168dc6bdff86455b7fd98aa6b19aa1af6a)) - by @satya164
+
+# [7.0.0-alpha.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.6...@react-navigation/native@7.0.0-alpha.7) (2024-01-17)
+
+### Bug Fixes
+
+* fix import for LinkingOptions ([9986736](https://github.com/react-navigation/react-navigation/commit/99867368c36f187a760c00dddb6382e047bf0eed)) - by @satya164
+
+### Features
+
+* move theming to core and pass theme to options ([#11707](https://github.com/react-navigation/react-navigation/issues/11707)) ([8e7ac4f](https://github.com/react-navigation/react-navigation/commit/8e7ac4f18545887b905f921df469dbf69d7951c7)) - by @satya164
+
+# [7.0.0-alpha.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.5...@react-navigation/native@7.0.0-alpha.6) (2023-11-17)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [7.0.0-alpha.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.4...@react-navigation/native@7.0.0-alpha.5) (2023-11-12)
+
+### Bug Fixes
+
+* cannot resolve use-latest-callback ([#11696](https://github.com/react-navigation/react-navigation/issues/11696)) ([361bc6a](https://github.com/react-navigation/react-navigation/commit/361bc6a3840b37ae082a70e4ff6315280814c7a1)) - by @jkaveri
+
+### Features
+
+* add `useUnhandledLinking` for handling deep links behind auth etc. ([#11602](https://github.com/react-navigation/react-navigation/issues/11602)) ([688c43a](https://github.com/react-navigation/react-navigation/commit/688c43af4b27c90d1a99876d6daebbbf69820f56)), closes [#10939](https://github.com/react-navigation/react-navigation/issues/10939) - by @osdnk
+* add a button element to elements package  ([#11669](https://github.com/react-navigation/react-navigation/issues/11669)) ([25a85c9](https://github.com/react-navigation/react-navigation/commit/25a85c90384ddfb6db946e791c01d8e033e04aa6)) - by @satya164
+* add API for unhandled linking ([#11672](https://github.com/react-navigation/react-navigation/issues/11672)) ([5758b26](https://github.com/react-navigation/react-navigation/commit/5758b2615e70ce4943b23ead0227507c63b11c7c)) - by @osdnk
+
+# [7.0.0-alpha.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.3...@react-navigation/native@7.0.0-alpha.4) (2023-09-25)
+
+### Bug Fixes
+
+* don't use .web extensions ([8dfd9bc](https://github.com/react-navigation/react-navigation/commit/8dfd9bc8efb4e89c7e7bbe9727911cdf148ffa05)) - by @satya164
+
+# [7.0.0-alpha.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.2...@react-navigation/native@7.0.0-alpha.3) (2023-09-07)
+
+### Bug Fixes
+
+* Allow to use `PlatformColor` in the theme ([#11570](https://github.com/react-navigation/react-navigation/issues/11570)) ([64734e7](https://github.com/react-navigation/react-navigation/commit/64734e7bc0d7f203d8e5db6abcc9a88157a5f16c)) - by @retyui
+* incorrect url parsing (isssue: [#10924](https://github.com/react-navigation/react-navigation/issues/10924)) ([#11528](https://github.com/react-navigation/react-navigation/issues/11528)) ([fab2cc6](https://github.com/react-navigation/react-navigation/commit/fab2cc6fb03858020808bcb49ede86e0701679e1)) - by @retyui
+* prevent back handler usage on web ([#11458](https://github.com/react-navigation/react-navigation/issues/11458)) ([486ee81](https://github.com/react-navigation/react-navigation/commit/486ee81cac4606949199b91267f7b5a2663a31ec)) - by @EvanBacon
+* replace series function used to queue async callbacks ([#11485](https://github.com/react-navigation/react-navigation/issues/11485)) ([d8dc693](https://github.com/react-navigation/react-navigation/commit/d8dc6934e3aa2099b34b5bf2801c57780e48fc18)) - by @karlsander
+
+* feat!: add a direction prop to NavigationContainer to specify rtl (#11393) ([8309636](https://github.com/react-navigation/react-navigation/commit/830963653fb5a489d02f1503222629373319b39e)), closes [#11393](https://github.com/react-navigation/react-navigation/issues/11393) - by @satya164
+
+### BREAKING CHANGES
+
+* Previously the navigators tried to detect RTL automatically and adjust the UI. However this is problematic since we cannot detect RTL in all cases (e.g. on Web).
+
+This adds an optional `direction` prop to `NavigationContainer` instead so that user can specify when React Navigation's UI needs to be adjusted for RTL. It defaults to the value from `I18nManager` on native platforms, however it needs to be explicitly passed for Web.
+
+# [7.0.0-alpha.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.1...@react-navigation/native@7.0.0-alpha.2) (2023-06-22)
+
+### Features
+
+* support a top-level path configuration in linking config ([1d0297e](https://github.com/react-navigation/react-navigation/commit/1d0297ed17788c01d7b901ad04b63d3f37f47266)) - by @satya164
+
+# [7.0.0-alpha.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@7.0.0-alpha.0...@react-navigation/native@7.0.0-alpha.1) (2023-03-01)
+
+### Bug Fixes
+
+* fix paths in sourcemap files ([368e069](https://github.com/react-navigation/react-navigation/commit/368e0691b9fb07d4b1cbe71cfe4c2f40512f93ad)) - by @satya164
+
+### Features
+
+* add ability to customize the fonts with the theme ([#11243](https://github.com/react-navigation/react-navigation/issues/11243)) ([1cd6836](https://github.com/react-navigation/react-navigation/commit/1cd6836f1d10bcdf7f96d9e4b9f7de0ddea9391f)) - by @satya164
+
+# [7.0.0-alpha.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.14...@react-navigation/native@7.0.0-alpha.0) (2023-02-17)
+
+### Bug Fixes
+
+* add `ScrollView` type to 'getScrollResponder' ([#11112](https://github.com/react-navigation/react-navigation/issues/11112)) ([f4324cd](https://github.com/react-navigation/react-navigation/commit/f4324cdbb50218bed30abf673f5070e20e2d7db8)) - by @ken0nek
+* don't modify browser history on re-render ([ab66777](https://github.com/react-navigation/react-navigation/commit/ab66777c092fae3d28c9c8381aeb5b92945ca256)) - by @satya164
+* keep hash/fragment section un URLs on web ([#11078](https://github.com/react-navigation/react-navigation/issues/11078)) ([a30daa0](https://github.com/react-navigation/react-navigation/commit/a30daa07fb667389420d78590757914487e32c19)) - by @nikgraf
+
+* refactor!: improve the API for Link component ([7f35837](https://github.com/react-navigation/react-navigation/commit/7f3583793ad17475531e155f1f433ffa16547015)) - by @satya164
+* fix!: align onReady callback and navigationRef.isReady ([1959baa](https://github.com/react-navigation/react-navigation/commit/1959baa97c101712db84905827f13a8a78a42ca7)) - by @satya164
+
+### Features
+
+* make useScrollToTop work when nesting multiple tab navigators ([#11063](https://github.com/react-navigation/react-navigation/issues/11063)) ([dce463a](https://github.com/react-navigation/react-navigation/commit/dce463a0e39b21509670b5c1d0cab933aa9e4962)), closes [/github.com/react-navigation/react-navigation/pull/9434#issuecomment-1328345015](https://github.com//github.com/react-navigation/react-navigation/pull/9434/issues/issuecomment-1328345015) - by @anthonyguay
+* support statically confguring navigation tree ([#11144](https://github.com/react-navigation/react-navigation/issues/11144)) ([4cc322e](https://github.com/react-navigation/react-navigation/commit/4cc322e08b3d6fe089710c9c6869bbdc183c2bd6)) - by @satya164
+
+### BREAKING CHANGES
+
+* Initially the `Link` component was designed to work with path strings via the `to` prop. But it has few issues:
+
+- The path strings are not type-safe, making it easy to cause typos and bugs after
+refactor
+- The API made navigating via screen name more incovenient, even if that's the preferred approach
+
+This revamps the API of the `Link` component to make it easier to use. Instead of `to` prop, it now accepts `screen` and `params` props, as well as an optional `href` prop to
+use instead of the generated path.
+
+e.g.:
+
+```js
+<Link screen="Details" params={{ foo: 42 }}>Go to Details</Link>
+```
+
+This also drops the `useLinkTo` hook and consolidates into the `useLinkTools` hook - which lets us build a `href` for a screen or action for a path.
+* Previously, the `onReady` prop and `navigationRef.isReady()` work slightly
+differently. The
+`onReady` callback fired when `NavigationContainer` finishes mounting and deep links is resolved.
+The `navigationRef.isReady()` method additionally checks if there are any navigators rendered - which may not be `true` if the user is rendering their navigators conditionally inside a
+`NavigationContainer`.
+
+This changes `onReady` to work similar to `navigationRef.isReady()`. The `onReady` callback will now fire only when there are navigators rendered - reflecting the value of
+`navigationRef.isReady()`.
+
+## [6.0.14](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.13...@react-navigation/native@6.0.14) (2022-11-21)
+
+### Bug Fixes
+
+* add accessibility props to NativeStack screens ([#11022](https://github.com/react-navigation/react-navigation/issues/11022)) ([3ab05af](https://github.com/react-navigation/react-navigation/commit/3ab05afeb6412b8e5566270442ac14a463136620))
+
+## [6.0.13](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.11...@react-navigation/native@6.0.13) (2022-09-16)
+
+### Bug Fixes
+
+* handle path with empty string properly for linking ([#10708](https://github.com/react-navigation/react-navigation/issues/10708)) ([e8c374e](https://github.com/react-navigation/react-navigation/commit/e8c374e0643a1521566c654e0052b53f2fd0667a))
+
+## [6.0.12](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.11...@react-navigation/native@6.0.12) (2022-08-24)
+
+### Bug Fixes
+
+* handle path with empty string properly for linking ([#10708](https://github.com/react-navigation/react-navigation/issues/10708)) ([e8c374e](https://github.com/react-navigation/react-navigation/commit/e8c374e0643a1521566c654e0052b53f2fd0667a))
+
+## [6.0.11](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.10...@react-navigation/native@6.0.11) (2022-07-05)
+
+### Bug Fixes
+
+* ensure same @types/react version in repo ([#10663](https://github.com/react-navigation/react-navigation/issues/10663)) ([e662465](https://github.com/react-navigation/react-navigation/commit/e6624653fbbd931158dbebd17142abf9637205b6)), closes [#10655](https://github.com/react-navigation/react-navigation/issues/10655)
+* expose `LinkingContext` ([#10604](https://github.com/react-navigation/react-navigation/issues/10604)) ([ac24e61](https://github.com/react-navigation/react-navigation/commit/ac24e617af10c48b161d1aaa7dfc8c1c1218a3cd))
+* prevent `history.go()` navigation outside bounds ([#10601](https://github.com/react-navigation/react-navigation/issues/10601)) ([ff8d8a3](https://github.com/react-navigation/react-navigation/commit/ff8d8a31d83f76129be5a8ee0a95ef2919eb1240)), closes [#10481](https://github.com/react-navigation/react-navigation/issues/10481)
+
+## [6.0.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.9...@react-navigation/native@6.0.10) (2022-04-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [6.0.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.8...@react-navigation/native@6.0.9) (2022-04-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [6.0.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.7...@react-navigation/native@6.0.8) (2022-02-02)
+
+### Bug Fixes
+
+* broken history items index when items reset ([#10312](https://github.com/react-navigation/react-navigation/issues/10312)) ([16f3462](https://github.com/react-navigation/react-navigation/commit/16f3462fb258e7e1264d3eb3f4f6c3a93381e01e))
+
+## [6.0.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.6...@react-navigation/native@6.0.7) (2022-01-29)
+
+### Bug Fixes
+
+* fix crash in useLinking on Web ([#10262](https://github.com/react-navigation/react-navigation/issues/10262)) ([e612a4c](https://github.com/react-navigation/react-navigation/commit/e612a4c837f73dc5830b0ff9e7e24e1e06d2451c)), closes [/github.com/react-navigation/react-navigation/pull/9970/files#r784475821](https://github.com//github.com/react-navigation/react-navigation/pull/9970/files/issues/r784475821) [/github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx#L84](https://github.com//github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx/issues/L84) [/github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx#L86](https://github.com//github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx/issues/L86) [/github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx#L108](https://github.com//github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx/issues/L108) [/github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx#L110](https://github.com//github.com/react-navigation/react-navigation/blob/fb84805c889bbb7059e7e95592c004aea2a510d6/packages/native/src/useLinking.tsx/issues/L110)
+* update URL on web when params change. fixes [#10046](https://github.com/react-navigation/react-navigation/issues/10046) ([4468b96](https://github.com/react-navigation/react-navigation/commit/4468b96db5065be8342483392d939742d21b20bc))
+* **web:** avoid passing undefined root state in web ([#10186](https://github.com/react-navigation/react-navigation/issues/10186)) ([9087439](https://github.com/react-navigation/react-navigation/commit/90874397e653a6db642822bff18014a3e5980fed)), closes [#10185](https://github.com/react-navigation/react-navigation/issues/10185)
+
+## [6.0.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.5...@react-navigation/native@6.0.6) (2021-10-12)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [6.0.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.4...@react-navigation/native@6.0.5) (2021-10-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [6.0.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.3...@react-navigation/native@6.0.4) (2021-09-26)
+
+### Bug Fixes
+
+* fix building link with useLinkProps ([bcdc559](https://github.com/react-navigation/react-navigation/commit/bcdc55975d64b8a5267f0b0dc47efb395a409762))
+
+## [6.0.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.2...@react-navigation/native@6.0.3) (2021-09-26)
+
+### Bug Fixes
+
+* fix href with useLinkProps. fixes [#9930](https://github.com/react-navigation/react-navigation/issues/9930) ([4ae53e1](https://github.com/react-navigation/react-navigation/commit/4ae53e1705e39aee75041928c07a56ec110bfd05))
+* fix navigation when going back and forth in history on web ([#9970](https://github.com/react-navigation/react-navigation/issues/9970)) ([fb84805](https://github.com/react-navigation/react-navigation/commit/fb84805c889bbb7059e7e95592c004aea2a510d6)), closes [#9408](https://github.com/react-navigation/react-navigation/issues/9408) [#9128](https://github.com/react-navigation/react-navigation/issues/9128)
+* make useScrollToTop work with react-native-largelist ([#9960](https://github.com/react-navigation/react-navigation/issues/9960)) ([073fd57](https://github.com/react-navigation/react-navigation/commit/073fd57537466a054dc902e915430f69bbe363e1))
+* use console.error for linking conflicts instead of throwing ([4b36bcf](https://github.com/react-navigation/react-navigation/commit/4b36bcf346a6196bbc8d5792e8eb4614709161a2))
+
+## [6.0.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.1...@react-navigation/native@6.0.2) (2021-08-07)
+
+### Bug Fixes
+
+* fix crash in useLinkTo when passing an object ([#9800](https://github.com/react-navigation/react-navigation/issues/9800)) ([dfd0cc7](https://github.com/react-navigation/react-navigation/commit/dfd0cc78fe4531ba7c957f826bc556829e231735))
+
+## [6.0.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0...@react-navigation/native@6.0.1) (2021-08-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.17...@react-navigation/native@6.0.0) (2021-08-01)
+
+### Features
+
+* add a way to filter out deep links from being handled ([c322b05](https://github.com/react-navigation/react-navigation/commit/c322b0501c6a9941a033471aed9e5b486b3ace7e))
+
+# [6.0.0-next.17](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.16...@react-navigation/native@6.0.0-next.17) (2021-07-16)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.16](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.15...@react-navigation/native@6.0.0-next.16) (2021-07-16)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.15](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.13...@react-navigation/native@6.0.0-next.15) (2021-07-01)
+
+### Bug Fixes
+
+* disable duplicate linking check for independent containers ([20b8ebd](https://github.com/react-navigation/react-navigation/commit/20b8ebd40547d93ccf626fcd9dad327fe1807b52))
+
+# [6.0.0-next.14](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.13...@react-navigation/native@6.0.0-next.14) (2021-06-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.13](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.12...@react-navigation/native@6.0.0-next.13) (2021-05-29)
+
+### Bug Fixes
+
+* validate property names in linking config ([324ea71](https://github.com/react-navigation/react-navigation/commit/324ea7181db6b743f512854be267cc9d65975b6f))
+
+# [6.0.0-next.12](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.11...@react-navigation/native@6.0.0-next.12) (2021-05-29)
+
+### Bug Fixes
+
+* try to fix [#9631](https://github.com/react-navigation/react-navigation/issues/9631) ([b4d7b0e](https://github.com/react-navigation/react-navigation/commit/b4d7b0ee86c09419a18357867a0a25bb90d960c0))
+
+# [6.0.0-next.11](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.10...@react-navigation/native@6.0.0-next.11) (2021-05-27)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.10](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.9...@react-navigation/native@6.0.0-next.10) (2021-05-26)
+
+### Features
+
+* expose container ref in useNavigation ([1d40279](https://github.com/react-navigation/react-navigation/commit/1d40279db18ab2aed12517ed3ca6af6d509477d2))
+
+# [6.0.0-next.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.8...@react-navigation/native@6.0.0-next.9) (2021-05-23)
+
+### Features
+
+* initial implementation of a flipper plugin ([d6f6f5f](https://github.com/react-navigation/react-navigation/commit/d6f6f5f94db85bd9166a5a97889c37690846d519))
+
+# [6.0.0-next.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.7...@react-navigation/native@6.0.0-next.8) (2021-05-16)
+
+### Bug Fixes
+
+* add ability to pass generic params to Link ([9c30c42](https://github.com/react-navigation/react-navigation/commit/9c30c42c0bddbc90c58b79a8be6d57e57a131e77))
+
+# [6.0.0-next.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.6...@react-navigation/native@6.0.0-next.7) (2021-05-10)
+
+### Features
+
+* return a NavigationContent component from useNavigationBuilder ([1179d56](https://github.com/react-navigation/react-navigation/commit/1179d56c5008270753feef41acdc1dbd2191efcf))
+
+# [6.0.0-next.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.5...@react-navigation/native@6.0.0-next.6) (2021-05-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.4...@react-navigation/native@6.0.0-next.5) (2021-05-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.3...@react-navigation/native@6.0.0-next.4) (2021-05-09)
+
+### Features
+
+* add ability to specify root param list ([b28bfdd](https://github.com/react-navigation/react-navigation/commit/b28bfddc17cbf3996fac04a34b2a7085ecf88be5))
+* support navigate-like object in Link ([1478659](https://github.com/react-navigation/react-navigation/commit/14786594c004d8176570f1a4ab013b57b3180665))
+
+# [6.0.0-next.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.2...@react-navigation/native@6.0.0-next.3) (2021-05-01)
+
+### Features
+
+* add helper and hook for container ref ([0ecd112](https://github.com/react-navigation/react-navigation/commit/0ecd112ec9786a26261ada3d33ef44dc1ec84da0))
+
+# [6.0.0-next.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0-next.1...@react-navigation/native@6.0.0-next.2) (2021-04-08)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@6.0.0...@react-navigation/native@6.0.0-next.1) (2021-03-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [6.0.0-next.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.9...@react-navigation/native@6.0.0-next.0) (2021-03-09)
+
+### Bug Fixes
+
+* address breaking change in react-native for Linking ([61c6bb0](https://github.com/react-navigation/react-navigation/commit/61c6bb01b9e3aacaf93ecc7398b6c45834a2216d))
+* default to backBehavior: firstRoute for TabRouter ([8bdc6c6](https://github.com/react-navigation/react-navigation/commit/8bdc6c6b9bc957a00a01eec2fcf6f971998c9380))
+* drop dangerously prefix from getState and getParent ([227f133](https://github.com/react-navigation/react-navigation/commit/227f133536af85dc5ff85eeb269b76ed80cd3f05))
+* normalize prefix when parsing. fixes [#9081](https://github.com/react-navigation/react-navigation/issues/9081) ([fd034fe](https://github.com/react-navigation/react-navigation/commit/fd034fea35cd0ae23dac979d90d8fc8598dadcc3))
+* support sync getInitialURL in native useLinking ([52dd4e7](https://github.com/react-navigation/react-navigation/commit/52dd4e7ac92e3e176ac9f106e646ff6e300f3412))
+
+### Features
+
+* associate path with the route it opens when deep linking ([#9384](https://github.com/react-navigation/react-navigation/issues/9384)) ([86e64fd](https://github.com/react-navigation/react-navigation/commit/86e64fdcd81a57cf3f3bdab4c9035b52984e7009)), closes [#9102](https://github.com/react-navigation/react-navigation/issues/9102)
+* stop exporting useLinking hook ([5a9a1ed](https://github.com/react-navigation/react-navigation/commit/5a9a1edae7366d26af3494de341d9503a011974a))
+
+### BREAKING CHANGES
+
+* Returning to first route after pressing back seems more common in apps. This commit changes the default for tab and drawer navigators to follow this common practice. To preserve previous behavior, you can pass backBehavior=history to tab and drawer navigators.
+* we have added linking prop for the same use case which is easier to use. so no need to export useLinking anymore.
+
+## [5.8.9](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.8...@react-navigation/native@5.8.9) (2020-11-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.8](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.7...@react-navigation/native@5.8.8) (2020-11-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.7](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.6...@react-navigation/native@5.8.7) (2020-11-08)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.5...@react-navigation/native@5.8.6) (2020-11-04)
+
+### Bug Fixes
+
+* ignore any errors from deep linking ([4c2379c](https://github.com/react-navigation/react-navigation/commit/4c2379cec1e661aa132002fd1c50909ea64cb983))
+
+## [5.8.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.4...@react-navigation/native@5.8.5) (2020-11-04)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.3...@react-navigation/native@5.8.4) (2020-11-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.2...@react-navigation/native@5.8.3) (2020-11-03)
+
+### Bug Fixes
+
+* make sure that invalid linking config doesn't work if app is open ([52451d1](https://github.com/react-navigation/react-navigation/commit/52451d11094b8551e3c6950b3e005d68225c7da9))
+
+## [5.8.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.1...@react-navigation/native@5.8.2) (2020-10-30)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.8.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.8.0...@react-navigation/native@5.8.1) (2020-10-28)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.8.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.6...@react-navigation/native@5.8.0) (2020-10-24)
+
+### Features
+
+* add `getInitialURL` and `subscribe` options to linking config ([748e92f](https://github.com/react-navigation/react-navigation/commit/748e92f120b9ff73c6b1e14515f60c76701081db))
+* allow deep linking to reset state ([#8973](https://github.com/react-navigation/react-navigation/issues/8973)) ([7f3b27a](https://github.com/react-navigation/react-navigation/commit/7f3b27a9ec8edd9604ac19774baa1f60963ccdc9)), closes [#8952](https://github.com/react-navigation/react-navigation/issues/8952)
+* support wildcard string prefixes ([#8942](https://github.com/react-navigation/react-navigation/issues/8942)) ([23ab350](https://github.com/react-navigation/react-navigation/commit/23ab3504921b7e741a48d66c6a953905206df4b7)), closes [#8941](https://github.com/react-navigation/react-navigation/issues/8941)
+
+## [5.7.6](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.5...@react-navigation/native@5.7.6) (2020-10-07)
+
+### Bug Fixes
+
+* add missing check for initial state on web ([9e36508](https://github.com/react-navigation/react-navigation/commit/9e3650831c22b47130d2b388390f7eb7910fe91d))
+
+## [5.7.5](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.4...@react-navigation/native@5.7.5) (2020-09-28)
+
+### Bug Fixes
+
+* check for correct resolved value in useThenable. fixes [#8798](https://github.com/react-navigation/react-navigation/issues/8798) ([cc8f1f4](https://github.com/react-navigation/react-navigation/commit/cc8f1f4205373f605fc457b40666305b3e117772))
+
+## [5.7.4](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.3...@react-navigation/native@5.7.4) (2020-09-22)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.7.3](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.2...@react-navigation/native@5.7.3) (2020-08-04)
+
+### Bug Fixes
+
+* make sure we don't exit the page when going back ([2a48b91](https://github.com/react-navigation/react-navigation/commit/2a48b917ecaf5b9adcfb5e31fb5bc787d114af23))
+* wait longer for history.go and handle interruptions ([b1f1377](https://github.com/react-navigation/react-navigation/commit/b1f13774295465942aafa1b0ff611b9eebccbd77))
+
+## [5.7.2](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.1...@react-navigation/native@5.7.2) (2020-07-28)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.7.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.7.0...@react-navigation/native@5.7.1) (2020-07-19)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.7.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.6.1...@react-navigation/native@5.7.0) (2020-07-10)
+
+### Bug Fixes
+
+* ensure correct document title after going back on Chrome ([8f5286e](https://github.com/react-navigation/react-navigation/commit/8f5286ef501d2e88cffbe4f7d8cdeb23a4af6cf1))
+* tweak border color to match iOS default ([c665c02](https://github.com/react-navigation/react-navigation/commit/c665c027a6531cf841690940a7e2cb4ea498ba03))
+
+### Features
+
+* add a hook to update document title ([13c9d1e](https://github.com/react-navigation/react-navigation/commit/13c9d1e281b4626199671bce11ba62d83767564f))
+* add support for badges to bottom tab bar ([96c7b68](https://github.com/react-navigation/react-navigation/commit/96c7b688ce773b3dd1f1cf7775367cd7080c94a2))
+
+## [5.6.1](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.6.0...@react-navigation/native@5.6.1) (2020-06-25)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.6.0](https://github.com/react-navigation/react-navigation/compare/@react-navigation/native@5.5.1...@react-navigation/native@5.6.0) (2020-06-24)
+
+### Bug Fixes
+
+* fix forward with history API. closes [#8409](https://github.com/react-navigation/react-navigation/issues/8409) ([d85d27c](https://github.com/react-navigation/react-navigation/commit/d85d27c43252630ea5c093fa6ad0d5a8c502b7c9))
+
+### Features
+
+* add an onReady callback to the container ([#8491](https://github.com/react-navigation/react-navigation/issues/8491)) ([8177c45](https://github.com/react-navigation/react-navigation/commit/8177c45d14ca6d1552574ad9ac740723f9cc8f5b))
+* rework linking configuration to be more strict ([#8502](https://github.com/react-navigation/react-navigation/issues/8502)) ([a021cfb](https://github.com/react-navigation/react-navigation/commit/a021cfb8af4afd50f785f6ee9b51d361e25704ca))
+
+## [5.5.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.5.0...@react-navigation/native@5.5.1) (2020-06-06)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.5.0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.4.3...@react-navigation/native@5.5.0) (2020-05-27)
+
+### Bug Fixes
+
+* export types from /native ([af1722d](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/af1722d1e915f3ec234df202f74c4b4c631472c7))
+
+### Features
+
+* add a `ServerContainer` component for SSR ([#8297](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8297)) ([68e750d](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/68e750d5a6d198a2f5bdb86ba631de0a27732943))
+* add ref to get current options in `ServerContainer` ([#8333](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8333)) ([0b1a718](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/0b1a718756e208d84b20e45ca56004332308ad54))
+
+## [5.4.3](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.4.2...@react-navigation/native@5.4.3) (2020-05-23)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.4.2](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.4.1...@react-navigation/native@5.4.2) (2020-05-20)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.4.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.4.0...@react-navigation/native@5.4.1) (2020-05-20)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.4.0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.3.2...@react-navigation/native@5.4.0) (2020-05-16)
+
+### Bug Fixes
+
+* fix types for linking options ([d14f38b](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/d14f38b80ad569d5828c1919cea426c659173924))
+
+### Features
+
+* add a PathConfig type ([60cb3c9](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/60cb3c9ba76d7ef166c9fe8b55f23728975b5b6e))
+
+## [5.3.2](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.3.1...@react-navigation/native@5.3.2) (2020-05-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.3.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.3.0...@react-navigation/native@5.3.1) (2020-05-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.3.0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.6...@react-navigation/native@5.3.0) (2020-05-10)
+
+### Features
+
+* initialState should take priority over deep link ([039017b](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/039017bc2af69120d2d10e8f2c8a62919c37eb65))
+
+## [5.2.6](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.5...@react-navigation/native@5.2.6) (2020-05-08)
+
+### Bug Fixes
+
+* fix building typescript definitions. closes [#8216](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8216) ([47a1229](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/47a12298378747edd2d22e54dc1c8677f98c49b4))
+
+## [5.2.5](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.4...@react-navigation/native@5.2.5) (2020-05-08)
+
+### Bug Fixes
+
+* return a promise-like from getInitialState ([#8210](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8210)) ([85ae378](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/85ae378d8cb1073895b281e13ebccee881d4c062))
+
+## [5.2.4](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.3...@react-navigation/native@5.2.4) (2020-05-05)
+
+### Bug Fixes
+
+* return undefined for buildLink if linking is not enabled ([9fd2635](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/9fd2635756362c8da79656b4d9b101bebaaf7003))
+
+## [5.2.3](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.2...@react-navigation/native@5.2.3) (2020-05-01)
+
+### Bug Fixes
+
+* default linking enabled to true ([c7b8e2e](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/c7b8e2e9666733143eef156b27f3e4995c36b856))
+
+## [5.2.2](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.1...@react-navigation/native@5.2.2) (2020-05-01)
+
+### Bug Fixes
+
+* don't throw when using 'useLinking'. fixes [#8171](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8171) ([10eca8b](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/10eca8b92edbce6dbef8abaf189e4b59a29b3748))
+
+## [5.2.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.2.0...@react-navigation/native@5.2.1) (2020-04-30)
+
+### Bug Fixes
+
+* render fallback only if linking is enabled. closes [#8161](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/8161) ([1c075ff](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/1c075ffb169d233ed0515efea264a5a69b4de52e))
+
+# [5.2.0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.7...@react-navigation/native@5.2.0) (2020-04-30)
+
+### Bug Fixes
+
+* add catch to thenable returned by getInitialState ([d6fa279](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/d6fa279d9371c7a6403d10d209a2a64147891c63))
+* return onPress instead of onClick for useLinkProps ([ae5442e](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/ae5442ebe812b91fa1f12164f27d1aeed918ab0e))
+
+### Features
+
+* add `useLinkBuilder` hook to build links ([2792f43](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/2792f438fe45428fe193e3708fee7ad61966cbf4))
+* add a useLinkProps hook ([f2291d1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/f2291d110faa2aa8e10c9133c1c0c28d54af7917))
+* add action prop to Link ([942d2be](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/942d2be2c72720469475ce12ec8df23825994dbf))
+* add Link component as useLinkTo hook for navigating to links ([2573b5b](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/2573b5beaac1240434e52f3f57bb29da2f541c88))
+
+## [5.1.7](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.6...@react-navigation/native@5.1.7) (2020-04-27)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.1.6](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.5...@react-navigation/native@5.1.6) (2020-04-17)
+
+### Bug Fixes
+
+* handle in-page go back when there's no history ([6bdf6ae](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/6bdf6ae4ed0f83ac1deb3172d9075a6a2adbbe11)), closes [#7852](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/7852)
+
+## [5.1.5](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.4...@react-navigation/native@5.1.5) (2020-04-08)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.1.4](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.3...@react-navigation/native@5.1.4) (2020-03-30)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.1.3](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.2...@react-navigation/native@5.1.3) (2020-03-23)
+
+### Bug Fixes
+
+* add info about android launchMode in useLinking error ([d94e43c](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/d94e43c3c8625b209a5c883b8cb560496d07fda7))
+
+## [5.1.2](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.1...@react-navigation/native@5.1.2) (2020-03-22)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.1.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.1.0...@react-navigation/native@5.1.1) (2020-03-19)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.1.0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.10...@react-navigation/native@5.1.0) (2020-03-17)
+
+### Features
+
+* add permanent drawer type ([#7818](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/7818)) ([6a5d0a0](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/6a5d0a035afae60d91aef78401ec8826295746fe))
+
+## [5.0.10](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.9...@react-navigation/native@5.0.10) (2020-03-16)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.9](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.8...@react-navigation/native@5.0.9) (2020-03-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.8](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.7...@react-navigation/native@5.0.8) (2020-02-26)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.7](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.6...@react-navigation/native@5.0.7) (2020-02-21)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.6](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.5...@react-navigation/native@5.0.6) (2020-02-19)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.5](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.4...@react-navigation/native@5.0.5) (2020-02-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.4](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.3...@react-navigation/native@5.0.4) (2020-02-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.3](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.2...@react-navigation/native@5.0.3) (2020-02-12)
+
+**Note:** Version bump only for package @react-navigation/native
+
+## [5.0.2](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.1...@react-navigation/native@5.0.2) (2020-02-11)
+
+### Bug Fixes
+
+* make getInitialState async on web ([6c6102b](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/6c6102b4597b5f0e3eada9e802bc5c171ee988d0))
+
+## [5.0.1](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.35...@react-navigation/native@5.0.1) (2020-02-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.35](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.34...@react-navigation/native@5.0.0-alpha.35) (2020-02-04)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.34](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.33...@react-navigation/native@5.0.0-alpha.34) (2020-02-04)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.33](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.32...@react-navigation/native@5.0.0-alpha.33) (2020-02-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.32](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.29...@react-navigation/native@5.0.0-alpha.32) (2020-02-02)
+
+### Bug Fixes
+
+* add licenses ([0c159db](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/0c159db4c9bc85e83b5cfe6819ab2562669a4d8f))
+
+### Features
+
+* add error if multiple instances of useLinking are used ([#310](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/310)) ([4bc0c8f](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/4bc0c8f66f98c0f8ce4e766648125640d01780c4))
+* integrate with history API on web ([5a3f835](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/5a3f8356b05bff7ed20893a5db6804612da3e568))
+
+# [5.0.0-alpha.30](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.29...@react-navigation/native@5.0.0-alpha.30) (2020-02-02)
+
+### Bug Fixes
+
+* add licenses ([0c159db](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/0c159db4c9bc85e83b5cfe6819ab2562669a4d8f))
+
+### Features
+
+* add error if multiple instances of useLinking are used ([#310](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/310)) ([4bc0c8f](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/4bc0c8f66f98c0f8ce4e766648125640d01780c4))
+* integrate with history API on web ([5a3f835](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/5a3f8356b05bff7ed20893a5db6804612da3e568))
+
+# [5.0.0-alpha.29](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.28...@react-navigation/native@5.0.0-alpha.29) (2020-01-24)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.28](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.27...@react-navigation/native@5.0.0-alpha.28) (2020-01-23)
+
+### Features
+
+* let the navigator specify if default can be prevented ([da67e13](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/da67e134d2157201360427d3c10da24f24cae7aa))
+
+# [5.0.0-alpha.27](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.26...@react-navigation/native@5.0.0-alpha.27) (2020-01-14)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.26](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.25...@react-navigation/native@5.0.0-alpha.26) (2020-01-13)
+
+### Bug Fixes
+
+* make sure paths aren't aliased when building definitions ([65a5dac](https://github.com/react-navigation/react-navigation/tree/main/packages/native/commit/65a5dac2bf887f4ba081ab15bd4c9870bb15697f)), closes [#265](https://github.com/react-navigation/react-navigation/tree/main/packages/native/issues/265)
+
+# [5.0.0-alpha.25](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.24...@react-navigation/native@5.0.0-alpha.25) (2020-01-13)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.24](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.22...@react-navigation/native@5.0.0-alpha.24) (2020-01-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.23](https://github.com/react-navigation/react-navigation/tree/main/packages/native/compare/@react-navigation/native@5.0.0-alpha.22...@react-navigation/native@5.0.0-alpha.23) (2020-01-09)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.22](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.21...@react-navigation/native@5.0.0-alpha.22) (2020-01-01)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.21](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.20...@react-navigation/native@5.0.0-alpha.21) (2019-12-19)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.20](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.19...@react-navigation/native@5.0.0-alpha.20) (2019-12-16)
+
+### Features
+
+* add nested config in deep linking ([#210](https://github.com/react-navigation/navigation-ex/issues/210)) ([8002d51](https://github.com/react-navigation/navigation-ex/commit/8002d5179524a7211c37760a4ed45e8c12af4358)), closes [#154](https://github.com/react-navigation/navigation-ex/issues/154)
+
+# [5.0.0-alpha.19](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.18...@react-navigation/native@5.0.0-alpha.19) (2019-12-14)
+
+### Features
+
+* add custom theme support ([#211](https://github.com/react-navigation/navigation-ex/issues/211)) ([00fc616](https://github.com/react-navigation/navigation-ex/commit/00fc616de0572bade8aa85052cdc8290360b1d7f))
+
+# [5.0.0-alpha.18](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.17...@react-navigation/native@5.0.0-alpha.18) (2019-12-11)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.17](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.16...@react-navigation/native@5.0.0-alpha.17) (2019-12-10)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.16](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.15...@react-navigation/native@5.0.0-alpha.16) (2019-11-17)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.15](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.14...@react-navigation/native@5.0.0-alpha.15) (2019-11-08)
+
+### Bug Fixes
+
+* don't call getNode if ref is already scrollable ([#162](https://github.com/react-navigation/navigation-ex/issues/162)) ([66551f2](https://github.com/react-navigation/navigation-ex/commit/66551f2))
+
+# [5.0.0-alpha.14](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.13...@react-navigation/native@5.0.0-alpha.14) (2019-10-30)
+
+### Bug Fixes
+
+* support scroll to top in navigators nested in tab ([50dea65](https://github.com/react-navigation/navigation-ex/commit/50dea65))
+
+# [5.0.0-alpha.13](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.12...@react-navigation/native@5.0.0-alpha.13) (2019-10-22)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.12](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.11...@react-navigation/native@5.0.0-alpha.12) (2019-10-15)
+
+### Features
+
+* initial version of native stack ([#102](https://github.com/react-navigation/navigation-ex/issues/102)) ([ba3f718](https://github.com/react-navigation/navigation-ex/commit/ba3f718))
+
+# [5.0.0-alpha.11](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.10...@react-navigation/native@5.0.0-alpha.11) (2019-10-06)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.10](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.9...@react-navigation/native@5.0.0-alpha.10) (2019-10-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.9](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.8...@react-navigation/native@5.0.0-alpha.9) (2019-10-03)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.8](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.7...@react-navigation/native@5.0.0-alpha.8) (2019-09-16)
+
+### Features
+
+* make deep link handling more flexible ([849d952](https://github.com/react-navigation/navigation-ex/commit/849d952))
+* make example run as bare react-native project as well ([#85](https://github.com/react-navigation/navigation-ex/issues/85)) ([d16c20c](https://github.com/react-navigation/navigation-ex/commit/d16c20c))
+
+# [5.0.0-alpha.7](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.5...@react-navigation/native@5.0.0-alpha.7) (2019-08-31)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.6](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.5...@react-navigation/native@5.0.0-alpha.6) (2019-08-31)
+
+**Note:** Version bump only for package @react-navigation/native
+
+# [5.0.0-alpha.5](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.4...@react-navigation/native@5.0.0-alpha.5) (2019-08-29)
+
+### Bug Fixes
+
+* handle both null and undefined in useScrollToTop ([c951027](https://github.com/react-navigation/navigation-ex/commit/c951027))
+
+### Features
+
+* handle animated component wrappers in `useScrollToTop` ([#81](https://github.com/react-navigation/navigation-ex/issues/81)) ([cdbf1e9](https://github.com/react-navigation/navigation-ex/commit/cdbf1e9))
+* handle more methods in useScrollToTop ([f9e8c7e](https://github.com/react-navigation/navigation-ex/commit/f9e8c7e))
+
+# [5.0.0-alpha.4](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.3...@react-navigation/native@5.0.0-alpha.4) (2019-08-28)
+
+### Bug Fixes
+
+* fix stack nested in tab always getting reset ([dead4e8](https://github.com/react-navigation/navigation-ex/commit/dead4e8))
+
+# [5.0.0-alpha.3](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.2...@react-navigation/native@5.0.0-alpha.3) (2019-08-27)
+
+### Features
+
+* add hook to scroll to top on tab press ([9e1104c](https://github.com/react-navigation/navigation-ex/commit/9e1104c))
+* add native container ([d26b77f](https://github.com/react-navigation/navigation-ex/commit/d26b77f))
+
+# [5.0.0-alpha.2](https://github.com/react-navigation/navigation-ex/compare/@react-navigation/native@5.0.0-alpha.1...@react-navigation/native@5.0.0-alpha.2) (2019-08-22)
+
+### Bug Fixes
+
+* fix path to typescript definitions ([f182315](https://github.com/react-navigation/navigation-ex/commit/f182315))
+
+# 5.0.0-alpha.1 (2019-08-21)
+
+### Bug Fixes
+
+* fix peer deps and add git urls ([6b4fc74](https://github.com/react-navigation/navigation-ex/commit/6b4fc74))
+
+### Features
+
+* add hook for deep link support ([35987ae](https://github.com/react-navigation/navigation-ex/commit/35987ae))
+* add native container with back button integration ([#48](https://github.com/react-navigation/navigation-ex/issues/48)) ([b7735af](https://github.com/react-navigation/navigation-ex/commit/b7735af))
diff --git a/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js b/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js
index 474db5e..b3167bc 100644
--- a/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js
+++ b/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js
@@ -1,6 +1,7 @@
 "use strict";
 
 import { nanoid } from 'nanoid/non-secure';
+import { findFocusedRouteKey } from "./findFocusedRouteKey.js";
 export function createMemoryHistory() {
   let index = 0;
   let items = [];
@@ -17,7 +18,10 @@ export function createMemoryHistory() {
       it.cb = () => cb(true);
     });
   };
-  const history = {
+  return {
+    get items() {
+      return items;
+    },
     get index() {
       // We store an id in the state instead of an index
       // Index could get out of sync with in-memory values if page reloads
@@ -32,12 +36,13 @@ export function createMemoryHistory() {
       return items[index];
     },
     backIndex({
-      path
+      path,
+      state
     }) {
       // We need to find the index from the element before current to get closest path to go back to
       for (let i = index - 1; i >= 0; i--) {
         const item = items[i];
-        if (item.path === path) {
+        if (item.path === path && findFocusedRouteKey(item.state) === findFocusedRouteKey(state)) {
           return i;
         }
       }
@@ -77,7 +82,7 @@ export function createMemoryHistory() {
 
       // Need to keep the hash part of the path if there was no previous history entry
       // or the previous history entry had the same path
-      let pathWithHash = path;
+      let pathWithHash = path.replace(/(\/{2,})/g, '/');
       const hash = pathWithHash.includes('#') ? '' : location.hash;
       if (!items.length || items.findIndex(item => item.id === id) < 0) {
         // There are two scenarios for creating an array with only one history record:
@@ -211,6 +216,5 @@ export function createMemoryHistory() {
       return () => window.removeEventListener('popstate', onPopState);
     }
   };
-  return history;
 }
 //# sourceMappingURL=createMemoryHistory.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js.map b/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js.map
index a726cd2..4aa3a82 100644
--- a/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js.map
+++ b/node_modules/@react-navigation/native/lib/module/createMemoryHistory.js.map
@@ -1 +1 @@
-{"version":3,"names":["nanoid","createMemoryHistory","index","items","pending","interrupt","forEach","it","cb","history","id","window","state","findIndex","item","get","backIndex","path","i","push","slice","length","pushState","replace","pathWithHash","hash","includes","location","replaceState","go","n","nextIndex","lastItemIndex","Promise","resolve","reject","done","interrupted","clearTimeout","timer","Error","title","document","ref","setTimeout","foundIndex","splice","onPopState","last","pop","removeEventListener","addEventListener","listen","listener"],"sourceRoot":"../../src","sources":["createMemoryHistory.tsx"],"mappings":"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","ignoreList":[]}
+{"version":3,"names":["nanoid","findFocusedRouteKey","createMemoryHistory","index","items","pending","interrupt","forEach","it","cb","id","window","history","state","findIndex","item","get","backIndex","path","i","push","slice","length","pushState","replace","pathWithHash","hash","includes","location","replaceState","go","n","nextIndex","lastItemIndex","Promise","resolve","reject","done","interrupted","clearTimeout","timer","Error","title","document","ref","setTimeout","foundIndex","splice","onPopState","last","pop","removeEventListener","addEventListener","listen","listener"],"sourceRoot":"../../src","sources":["createMemoryHistory.tsx"],"mappings":"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","ignoreList":[]}
diff --git a/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js b/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js
new file mode 100644
index 0000000..3b676f8
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js
@@ -0,0 +1,8 @@
+"use strict";
+
+import { findFocusedRoute } from '@react-navigation/core';
+export function findFocusedRouteKey(state) {
+  const focusedRoute = findFocusedRoute(state);
+  return focusedRoute?.key;
+}
+//# sourceMappingURL=findFocusedRouteKey.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js.map b/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js.map
new file mode 100644
index 0000000..4a4b3ea
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/module/findFocusedRouteKey.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["findFocusedRoute","findFocusedRouteKey","state","focusedRoute","key"],"sourceRoot":"../../src","sources":["findFocusedRouteKey.ts"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AAGzD,OAAO,SAASC,mBAAmBA,CAACC,KAAmB,EAAE;EACvD,MAAMC,YAAY,GAAGH,gBAAgB,CAACE,KAAK,CAAC;EAC5C,OAAOC,YAAY,EAAEC,GAAG;AAC1B","ignoreList":[]}
diff --git a/node_modules/@react-navigation/native/lib/module/useLinking.js b/node_modules/@react-navigation/native/lib/module/useLinking.js
index d30009f..0dab822 100644
--- a/node_modules/@react-navigation/native/lib/module/useLinking.js
+++ b/node_modules/@react-navigation/native/lib/module/useLinking.js
@@ -4,6 +4,7 @@ import { findFocusedRoute, getActionFromState as getActionFromStateDefault, getP
 import isEqual from 'fast-deep-equal';
 import * as React from 'react';
 import { createMemoryHistory } from "./createMemoryHistory.js";
+import { findFocusedRouteKey } from "./findFocusedRouteKey.js";
 import { ServerContext } from "./ServerContext.js";
 /**
  * Find the matching navigation state that changed between 2 navigation states
@@ -45,6 +46,43 @@ export const series = cb => {
   return callback;
 };
 const linkingHandlers = [];
+function getAllStateKeys(state) {
+  const current = state;
+  const keys = [];
+  if (current.routes) {
+    for (const route of current.routes) {
+      keys.push(route.key);
+      if (route.state) {
+        keys.push(...getAllStateKeys(route.state));
+      }
+    }
+  }
+  return keys;
+}
+function getStaleHistoryDiff(items, newState) {
+  const newStateKeys = getAllStateKeys(newState);
+  for (let i = items.length - 1; i >= 0; i--) {
+    const itemFocusedKey = findFocusedRouteKey(items[i].state);
+    if (newStateKeys.includes(itemFocusedKey)) {
+      return items.length - i - 1;
+    }
+  }
+  return -1;
+}
+function getHistoryDeltaByKeys(focusedState, previousFocusedState) {
+  const focusedStateKeys = focusedState.routes.map(r => r.key);
+  const previousFocusedStateKeys = previousFocusedState.routes.map(r => r.key);
+  const minLength = Math.min(focusedStateKeys.length, previousFocusedStateKeys.length);
+  let matchingKeys = 0;
+  for (let i = 0; i < minLength; i++) {
+    if (focusedStateKeys[i] === previousFocusedStateKeys[i]) {
+      matchingKeys++;
+    } else {
+      break;
+    }
+  }
+  return -(previousFocusedStateKeys.length - matchingKeys);
+}
 export function useLinking(ref, {
   enabled = true,
   config,
@@ -256,6 +294,9 @@ export function useLinking(ref, {
       // Otherwise it's likely a change triggered by `popstate`
       path !== pendingPath) {
         const historyDelta = (focusedState.history ? focusedState.history.length : focusedState.routes.length) - (previousFocusedState.history ? previousFocusedState.history.length : previousFocusedState.routes.length);
+
+        // The historyDelta and historyDeltaByKeys may differ if the new state has an entry that didn't exist in previous state
+        const historyDeltaByKeys = getHistoryDeltaByKeys(focusedState, previousFocusedState);
         if (historyDelta > 0) {
           // If history length is increased, we should pushState
           // Note that path might not actually change here, for example, drawer open should pushState
@@ -267,7 +308,8 @@ export function useLinking(ref, {
           // If history length is decreased, i.e. entries were removed, we want to go back
 
           const nextIndex = history.backIndex({
-            path
+            path,
+            state
           });
           const currentIndex = history.index;
           try {
@@ -276,11 +318,26 @@ export function useLinking(ref, {
             history.get(nextIndex)) {
               // An existing entry for this path exists and it's less than current index, go back to that
               await history.go(nextIndex - currentIndex);
+              history.replace({
+                path,
+                state
+              });
             } else {
               // We couldn't find an existing entry to go back to, so we'll go back by the delta
               // This won't be correct if multiple routes were pushed in one go before
               // Usually this shouldn't happen and this is a fallback for that
-              await history.go(historyDelta);
+              await history.go(historyDeltaByKeys);
+              if (historyDeltaByKeys + 1 === historyDelta) {
+                history.push({
+                  path,
+                  state
+                });
+              } else {
+                history.replace({
+                  path,
+                  state
+                });
+              }
             }
 
             // Store the updated state as well as fix the path if incorrect
@@ -293,10 +350,22 @@ export function useLinking(ref, {
           }
         } else {
           // If history length is unchanged, we want to replaceState
-          history.replace({
-            path,
-            state
-          });
+          // and remove any entries from history which focused route no longer exists in state
+          // That may happen if we replace a whole navigator.
+
+          const staleHistoryDiff = getStaleHistoryDiff(history.items.slice(0, history.index + 1), state);
+          if (staleHistoryDiff <= 0) {
+            history.replace({
+              path,
+              state
+            });
+          } else {
+            await history.go(-staleHistoryDiff);
+            history.push({
+              path,
+              state
+            });
+          }
         }
       } else {
         // If no common navigation state was found, assume it's a replace
diff --git a/node_modules/@react-navigation/native/lib/module/useLinking.js.map b/node_modules/@react-navigation/native/lib/module/useLinking.js.map
index afa43ce..acf80fc 100644
--- a/node_modules/@react-navigation/native/lib/module/useLinking.js.map
+++ b/node_modules/@react-navigation/native/lib/module/useLinking.js.map
@@ -1 +1 @@
-{"version":3,"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","useNavigationIndependentTree","isEqual","React","createMemoryHistory","ServerContext","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","cb","queue","Promise","resolve","callback","then","linkingHandlers","useLinking","ref","enabled","config","onUnhandledLinking","independent","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","useState","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","validateRoutesNotExistInRootState","useCallback","navigation","rootState","getRootState","some","r","routeNames","includes","name","server","useContext","getInitialState","value","location","window","path","pathname","search","thenable","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","previousIndex","record","get","resetRoot","action","dispatch","e","warn","message","getPathForRoute","route","stateForPath","focusedRoute","params","previousRoute","hash","replace","onStateChange","previousState","pendingPath","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","addListener"],"sourceRoot":"../../src","sources":["useLinking.tsx"],"mappings":"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","ignoreList":[]}
+{"version":3,"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","useNavigationIndependentTree","isEqual","React","createMemoryHistory","findFocusedRouteKey","ServerContext","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","cb","queue","Promise","resolve","callback","then","linkingHandlers","getAllStateKeys","current","keys","route","push","getStaleHistoryDiff","items","newState","newStateKeys","i","itemFocusedKey","includes","getHistoryDeltaByKeys","focusedState","previousFocusedState","focusedStateKeys","map","r","previousFocusedStateKeys","minLength","Math","min","matchingKeys","useLinking","ref","enabled","config","onUnhandledLinking","independent","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","indexOf","splice","useState","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","validateRoutesNotExistInRootState","useCallback","navigation","rootState","getRootState","some","routeNames","name","server","useContext","getInitialState","value","location","window","path","pathname","search","thenable","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","previousIndex","record","get","resetRoot","action","dispatch","e","warn","message","getPathForRoute","stateForPath","focusedRoute","params","previousRoute","hash","replace","onStateChange","previousState","pendingPath","historyDelta","historyDeltaByKeys","nextIndex","backIndex","currentIndex","go","staleHistoryDiff","slice","addListener"],"sourceRoot":"../../src","sources":["useLinking.tsx"],"mappings":"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","ignoreList":[]}
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts
new file mode 100644
index 0000000..2a699ed
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=Link.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts.map
new file mode 100644
index 0000000..19c8be9
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/Link.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Link.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/Link.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts
new file mode 100644
index 0000000..ffc70df
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=NavigationContainer.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts.map
new file mode 100644
index 0000000..9e5a8d5
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/NavigationContainer.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NavigationContainer.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/NavigationContainer.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts
new file mode 100644
index 0000000..e142b8b
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=ServerContainer.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts.map
new file mode 100644
index 0000000..39163ac
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/ServerContainer.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ServerContainer.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/ServerContainer.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts
new file mode 100644
index 0000000..7896890
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=createMemoryHistory.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts.map
new file mode 100644
index 0000000..58f591b
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createMemoryHistory.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"createMemoryHistory.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/createMemoryHistory.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts
new file mode 100644
index 0000000..14eb2c4
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=createStaticNavigation.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts.map
new file mode 100644
index 0000000..ca06c90
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/createStaticNavigation.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"createStaticNavigation.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/createStaticNavigation.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts
new file mode 100644
index 0000000..be5d649
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=extractPathFromURL.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts.map
new file mode 100644
index 0000000..630ee12
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/extractPathFromURL.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"extractPathFromURL.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/extractPathFromURL.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts
new file mode 100644
index 0000000..cca7e72
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=useLinkBuilder.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts.map
new file mode 100644
index 0000000..b803a80
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinkBuilder.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useLinkBuilder.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/useLinkBuilder.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts
new file mode 100644
index 0000000..d0ed2fa
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=useLinking.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts.map
new file mode 100644
index 0000000..0e47c4b
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useLinking.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useLinking.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/useLinking.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts
new file mode 100644
index 0000000..73a251a
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=useRoutePath.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts.map
new file mode 100644
index 0000000..c22af00
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/__tests__/useRoutePath.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useRoutePath.test.d.ts","sourceRoot":"","sources":["../../../../src/__tests__/useRoutePath.test.tsx"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts
index 0036e1b..513791b 100644
--- a/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts
+++ b/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts
@@ -5,10 +5,12 @@ type HistoryRecord = {
     path: string;
 };
 export declare function createMemoryHistory(): {
+    readonly items: HistoryRecord[];
     readonly index: number;
     get(index: number): HistoryRecord;
-    backIndex({ path }: {
+    backIndex({ path, state }: {
         path: string;
+        state: NavigationState;
     }): number;
     push({ path, state }: {
         path: string;
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts.map
index d581252..506eaca 100644
--- a/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts.map
+++ b/node_modules/@react-navigation/native/lib/typescript/src/createMemoryHistory.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"createMemoryHistory.d.ts","sourceRoot":"","sources":["../../../src/createMemoryHistory.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAG9D,KAAK,aAAa,GAAG;IAEnB,EAAE,EAAE,MAAM,CAAC;IAEX,KAAK,EAAE,eAAe,CAAC;IAEvB,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF,wBAAgB,mBAAmB;oBAmBlB,MAAM;eAcR,MAAM;wBAIG;QAAE,IAAI,EAAE,MAAM,CAAA;KAAE;0BAad;QAAE,IAAI,EAAE,MAAM,CAAC;QAAC,KAAK,EAAE,eAAe,CAAA;KAAE;6BAmBrC;QAAE,IAAI,EAAE,MAAM,CAAC;QAAC,KAAK,EAAE,eAAe,CAAA;KAAE;UAoC3D,MAAM;qBA0FK,MAAM,IAAI;EAqB9B"}
\ No newline at end of file
+{"version":3,"file":"createMemoryHistory.d.ts","sourceRoot":"","sources":["../../../src/createMemoryHistory.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAK9D,KAAK,aAAa,GAAG;IAEnB,EAAE,EAAE,MAAM,CAAC;IAEX,KAAK,EAAE,eAAe,CAAC;IAEvB,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF,wBAAgB,mBAAmB;oBAmBlB,aAAa,EAAE;oBAIf,MAAM;eAcR,MAAM;+BAIU;QAAE,IAAI,EAAE,MAAM,CAAC;QAAC,KAAK,EAAE,eAAe,CAAA;KAAE;0BAgB7C;QAAE,IAAI,EAAE,MAAM,CAAC;QAAC,KAAK,EAAE,eAAe,CAAA;KAAE;6BAmBrC;QAAE,IAAI,EAAE,MAAM,CAAC;QAAC,KAAK,EAAE,eAAe,CAAA;KAAE;UAoC3D,MAAM;qBA0FK,MAAM,IAAI;EAmB9B"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts b/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts
new file mode 100644
index 0000000..e9329dc
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts
@@ -0,0 +1,3 @@
+import type { InitialState } from '@react-navigation/routers';
+export declare function findFocusedRouteKey(state: InitialState): string | undefined;
+//# sourceMappingURL=findFocusedRouteKey.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts.map
new file mode 100644
index 0000000..db5f503
--- /dev/null
+++ b/node_modules/@react-navigation/native/lib/typescript/src/findFocusedRouteKey.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"findFocusedRouteKey.d.ts","sourceRoot":"","sources":["../../../src/findFocusedRouteKey.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAE9D,wBAAgB,mBAAmB,CAAC,KAAK,EAAE,YAAY,sBAGtD"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/typescript/src/useLinking.d.ts.map b/node_modules/@react-navigation/native/lib/typescript/src/useLinking.d.ts.map
index c440d53..9ec8243 100644
--- a/node_modules/@react-navigation/native/lib/typescript/src/useLinking.d.ts.map
+++ b/node_modules/@react-navigation/native/lib/typescript/src/useLinking.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"useLinking.d.ts","sourceRoot":"","sources":["../../../src/useLinking.tsx"],"names":[],"mappings":"AAAA,OAAO,EAIL,gBAAgB,IAAI,uBAAuB,EAC3C,KAAK,sBAAsB,EAE3B,KAAK,aAAa,EAEnB,MAAM,wBAAwB,CAAC;AAEhC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,SAAS,CAAC;AAE9C,KAAK,WAAW,GAAG,UAAU,CAAC,OAAO,uBAAuB,CAAC,CAAC;AA0C9D;;GAEG;AACH,eAAO,MAAM,MAAM,GAAI,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,eAO7C,CAAC;AAIF,KAAK,OAAO,GAAG,cAAc,CAAC,aAAa,CAAC,CAAC;AAE7C,wBAAgB,UAAU,CACxB,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,EAClE,EACE,OAAc,EACd,MAAM,EACN,gBAA0C,EAC1C,gBAA0C,EAC1C,kBAA8C,GAC/C,EAAE,OAAO,EACV,kBAAkB,EAAE,CAAC,mBAAmB,EAAE,MAAM,GAAG,SAAS,KAAK,IAAI;2BAmGhD,WAAW,CAAC,WAAW,GAAG,SAAS,CAAC;EAkQ1D"}
\ No newline at end of file
+{"version":3,"file":"useLinking.d.ts","sourceRoot":"","sources":["../../../src/useLinking.tsx"],"names":[],"mappings":"AAAA,OAAO,EAIL,gBAAgB,IAAI,uBAAuB,EAC3C,KAAK,sBAAsB,EAE3B,KAAK,aAAa,EAGnB,MAAM,wBAAwB,CAAC;AAEhC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,SAAS,CAAC;AAE9C,KAAK,WAAW,GAAG,UAAU,CAAC,OAAO,uBAAuB,CAAC,CAAC;AA0C9D;;GAEG;AACH,eAAO,MAAM,MAAM,GAAI,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,eAO7C,CAAC;AAsDF,KAAK,OAAO,GAAG,cAAc,CAAC,aAAa,CAAC,CAAC;AAE7C,wBAAgB,UAAU,CACxB,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,EAClE,EACE,OAAc,EACd,MAAM,EACN,gBAA0C,EAC1C,gBAA0C,EAC1C,kBAA8C,GAC/C,EAAE,OAAO,EACV,kBAAkB,EAAE,CAAC,mBAAmB,EAAE,MAAM,GAAG,SAAS,KAAK,IAAI;2BAmGhD,WAAW,CAAC,WAAW,GAAG,SAAS,CAAC;EA0R1D"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/src/__tests__/Link.test.tsx b/node_modules/@react-navigation/native/src/__tests__/Link.test.tsx
new file mode 100644
index 0000000..613c292
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/Link.test.tsx
@@ -0,0 +1,197 @@
+import { expect, jest, test } from '@jest/globals';
+import { fireEvent, render } from '@testing-library/react-native';
+import { Platform } from 'react-native';
+
+import { createStackNavigator } from '../__stubs__/createStackNavigator';
+import { Link } from '../Link';
+import { NavigationContainer } from '../NavigationContainer';
+
+type RootParamList = { Foo: undefined; Bar: { id: string } };
+
+jest.replaceProperty(Platform, 'OS', 'web');
+
+test('renders link with href on web', () => {
+  const config = {
+    prefixes: ['https://example.com'],
+    config: {
+      screens: {
+        Foo: 'foo',
+        Bar: 'bar/:id',
+      },
+    },
+    getInitialURL() {
+      return null;
+    },
+  };
+
+  const Stack = createStackNavigator<RootParamList>();
+
+  const FooScreen = () => {
+    return (
+      <Link<any> screen="Bar" params={{ id: '42' }}>
+        Go to Bar
+      </Link>
+    );
+  };
+
+  const BarScreen = () => {
+    return <Link<any> screen="Foo">Go to Foo</Link>;
+  };
+
+  const { getByText, toJSON } = render(
+    <NavigationContainer linking={config}>
+      <Stack.Navigator>
+        <Stack.Screen name="Foo" component={FooScreen} />
+        <Stack.Screen name="Bar" component={BarScreen} />
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+
+  expect(toJSON()).toMatchInlineSnapshot(`
+<Text
+  href="/bar/42"
+  onPress={[Function]}
+  role="link"
+  style={
+    [
+      {
+        "color": "rgb(0, 122, 255)",
+      },
+      {
+        "fontFamily": "System",
+        "fontWeight": "400",
+      },
+      undefined,
+    ]
+  }
+>
+  Go to Bar
+</Text>
+`);
+
+  const event = {
+    defaultPrevented: false,
+    preventDefault() {
+      event.defaultPrevented = true;
+    },
+  };
+
+  fireEvent.press(getByText('Go to Bar'), event);
+
+  expect(toJSON()).toMatchInlineSnapshot(`
+<Text
+  href="/foo"
+  onPress={[Function]}
+  role="link"
+  style={
+    [
+      {
+        "color": "rgb(0, 122, 255)",
+      },
+      {
+        "fontFamily": "System",
+        "fontWeight": "400",
+      },
+      undefined,
+    ]
+  }
+>
+  Go to Foo
+</Text>
+`);
+});
+
+test("doesn't navigate if default was prevented", () => {
+  const config = {
+    prefixes: ['https://example.com'],
+    config: {
+      screens: {
+        Foo: 'foo',
+        Bar: 'bar/:id',
+      },
+    },
+    getInitialURL() {
+      return null;
+    },
+  };
+
+  const Stack = createStackNavigator<RootParamList>();
+
+  const FooScreen = () => {
+    return (
+      <Link<any>
+        screen="Bar"
+        params={{ id: '42' }}
+        onPress={(e) => e.preventDefault()}
+      >
+        Go to Bar
+      </Link>
+    );
+  };
+
+  const BarScreen = () => {
+    return <Link<any> screen="Foo">Go to Foo</Link>;
+  };
+
+  const { getByText, toJSON } = render(
+    <NavigationContainer linking={config}>
+      <Stack.Navigator>
+        <Stack.Screen name="Foo" component={FooScreen} />
+        <Stack.Screen name="Bar" component={BarScreen} />
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+
+  expect(toJSON()).toMatchInlineSnapshot(`
+<Text
+  href="/bar/42"
+  onPress={[Function]}
+  role="link"
+  style={
+    [
+      {
+        "color": "rgb(0, 122, 255)",
+      },
+      {
+        "fontFamily": "System",
+        "fontWeight": "400",
+      },
+      undefined,
+    ]
+  }
+>
+  Go to Bar
+</Text>
+`);
+
+  const event = {
+    defaultPrevented: false,
+    preventDefault() {
+      event.defaultPrevented = true;
+    },
+  };
+
+  fireEvent.press(getByText('Go to Bar'), event);
+
+  expect(toJSON()).toMatchInlineSnapshot(`
+<Text
+  href="/bar/42"
+  onPress={[Function]}
+  role="link"
+  style={
+    [
+      {
+        "color": "rgb(0, 122, 255)",
+      },
+      {
+        "fontFamily": "System",
+        "fontWeight": "400",
+      },
+      undefined,
+    ]
+  }
+>
+  Go to Bar
+</Text>
+`);
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/NavigationContainer.test.tsx b/node_modules/@react-navigation/native/src/__tests__/NavigationContainer.test.tsx
new file mode 100644
index 0000000..48d4f59
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/NavigationContainer.test.tsx
@@ -0,0 +1,145 @@
+import { expect, jest, test } from '@jest/globals';
+import {
+  createNavigationContainerRef,
+  createNavigatorFactory,
+  type ParamListBase,
+  StackRouter,
+  TabRouter,
+  useNavigationBuilder,
+} from '@react-navigation/core';
+import { act, render, waitFor } from '@testing-library/react-native';
+
+import { window } from '../__stubs__/window';
+import { NavigationContainer } from '../NavigationContainer';
+
+Object.assign(global, window);
+
+// We want to use the web version of useLinking
+// eslint-disable-next-line import-x/extensions
+jest.mock('../useLinking', () => require('../useLinking.tsx'));
+
+test('integrates with the history API', async () => {
+  const createStackNavigator = createNavigatorFactory((props: any) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      StackRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route, i) => (
+          <div key={route.key} aria-current={state.index === i || undefined}>
+            {descriptors[route.key].render()}
+          </div>
+        ))}
+      </NavigationContent>
+    );
+  });
+
+  const createTabNavigator = createNavigatorFactory((props: any) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      TabRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route, i) => (
+          <div key={route.key} aria-current={state.index === i || undefined}>
+            {descriptors[route.key].render()}
+          </div>
+        ))}
+      </NavigationContent>
+    );
+  });
+
+  const Stack = createStackNavigator();
+  const Tab = createTabNavigator();
+
+  const TestScreen = ({ route }: any): any =>
+    `${route.name} ${JSON.stringify(route.params)}`;
+
+  const linking = {
+    prefixes: [],
+    config: {
+      screens: {
+        Home: {
+          path: '',
+          initialRouteName: 'Feed',
+          screens: {
+            Profile: ':user',
+            Settings: 'edit',
+            Updates: 'updates',
+            Feed: 'feed',
+          },
+        },
+        Chat: 'chat',
+      },
+    },
+  };
+
+  const navigation = createNavigationContainerRef<ParamListBase>();
+
+  render(
+    <NavigationContainer ref={navigation} linking={linking}>
+      <Tab.Navigator>
+        <Tab.Screen name="Home">
+          {() => (
+            <Stack.Navigator initialRouteName="Feed">
+              <Stack.Screen name="Profile" component={TestScreen} />
+              <Stack.Screen name="Settings" component={TestScreen} />
+              <Stack.Screen name="Feed" component={TestScreen} />
+              <Stack.Screen name="Updates" component={TestScreen} />
+            </Stack.Navigator>
+          )}
+        </Tab.Screen>
+        <Tab.Screen name="Chat" component={TestScreen} />
+      </Tab.Navigator>
+    </NavigationContainer>
+  );
+
+  expect(window.location.pathname).toBe('/feed');
+
+  act(() => navigation.current?.navigate('Profile', { user: 'jane' }));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => navigation.current?.navigate('Updates'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/updates'));
+
+  act(() => navigation.current?.goBack());
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => {
+    window.history.back();
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/feed'));
+
+  act(() => {
+    window.history.forward();
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => navigation.current?.navigate('Settings'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/edit'));
+
+  act(() => {
+    window.history.go(-2);
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/feed'));
+
+  act(() => navigation.current?.navigate('Settings'));
+  act(() => navigation.current?.navigate('Chat'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/chat'));
+
+  act(() => navigation.current?.navigate('Home'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/edit'));
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/ServerContainer.test.tsx b/node_modules/@react-navigation/native/src/__tests__/ServerContainer.test.tsx
new file mode 100644
index 0000000..79908c3
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/ServerContainer.test.tsx
@@ -0,0 +1,244 @@
+import { expect, jest, test } from '@jest/globals';
+import {
+  createNavigatorFactory,
+  type DefaultNavigatorOptions,
+  type NavigationListBase,
+  type NavigatorScreenParams,
+  type ParamListBase,
+  type StackNavigationState,
+  StackRouter,
+  TabRouter,
+  type TypedNavigator,
+  useNavigationBuilder,
+} from '@react-navigation/core';
+import * as React from 'react';
+import { renderToString } from 'react-dom/server';
+
+import { NavigationContainer } from '../NavigationContainer';
+import { ServerContainer } from '../ServerContainer';
+import type { ServerContainerRef } from '../types';
+
+// @ts-expect-error: practically window is same as global, so we can ignore the error
+global.window = global;
+
+window.addEventListener = () => {};
+window.removeEventListener = () => {};
+
+// We want to use the web version of useLinking
+// eslint-disable-next-line import-x/extensions
+jest.mock('../useLinking', () => require('../useLinking.tsx'));
+
+// Since Jest is configured for React Native, the *.native.js file is imported
+// Causing the wrong useIsomorphicLayoutEffect to be imported
+// It causes "Warning: useLayoutEffect does nothing on the server"
+// So we explicitly silence it here
+// This warning is being removed in React: https://github.com/facebook/react/pull/26395
+const error = console.error;
+
+jest.spyOn(console, 'error').mockImplementation((...args) => {
+  if (/Warning: useLayoutEffect does nothing on the server/m.test(args[0])) {
+    return;
+  }
+
+  error(...args);
+});
+
+test('renders correct state with location', () => {
+  const StackNavigator = (
+    props: DefaultNavigatorOptions<
+      ParamListBase,
+      string | undefined,
+      StackNavigationState<ParamListBase>,
+      {},
+      {},
+      unknown
+    >
+  ) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      StackRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route) => (
+          <div key={route.key}>{descriptors[route.key].render()}</div>
+        ))}
+      </NavigationContent>
+    );
+  };
+
+  function createStackNavigator<ParamList extends {}>(): TypedNavigator<{
+    ParamList: ParamList;
+    NavigatorID: string | undefined;
+    State: StackNavigationState<ParamList>;
+    ScreenOptions: {};
+    EventMap: {};
+    NavigationList: NavigationListBase<ParamList>;
+    Navigator: typeof StackNavigator;
+  }> {
+    return createNavigatorFactory(StackNavigator)();
+  }
+
+  type StackAParamList = {
+    Home: NavigatorScreenParams<StackBParamList>;
+    Chat: undefined;
+  };
+
+  type StackBParamList = {
+    Profile: undefined;
+    Settings: undefined;
+    Feed: undefined;
+    Updates: undefined;
+  };
+
+  const StackA = createStackNavigator<StackAParamList>();
+  const StackB = createStackNavigator<StackBParamList>();
+
+  const TestScreen = ({ route }: any): any =>
+    `${route.name} ${JSON.stringify(route.params)}`;
+
+  const NestedStack = () => {
+    return (
+      <StackB.Navigator initialRouteName="Feed">
+        <StackB.Screen name="Profile" component={TestScreen} />
+        <StackB.Screen name="Settings" component={TestScreen} />
+        <StackB.Screen name="Feed" component={TestScreen} />
+        <StackB.Screen name="Updates" component={TestScreen} />
+      </StackB.Navigator>
+    );
+  };
+
+  const element = (
+    <NavigationContainer<StackAParamList>
+      linking={{
+        prefixes: [],
+        config: {
+          screens: {
+            Home: {
+              initialRouteName: 'Profile',
+              screens: {
+                Settings: {
+                  path: ':user/edit',
+                },
+                Updates: {
+                  path: ':user/updates',
+                },
+              },
+            },
+          },
+        },
+      }}
+    >
+      <StackA.Navigator>
+        <StackA.Screen name="Home" component={NestedStack} />
+        <StackA.Screen name="Chat" component={TestScreen} />
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+
+  // @ts-expect-error: we don't care about adding all properties on location for the test
+  window.location = { pathname: '/jane/edit', search: '' };
+
+  const client = renderToString(element);
+
+  expect(client).toMatchInlineSnapshot(
+    `"<div><div>Profile undefined</div><div>Settings {&quot;user&quot;:&quot;jane&quot;}</div></div>"`
+  );
+
+  const server = renderToString(
+    <ServerContainer location={{ pathname: '/john/updates', search: '' }}>
+      {element}
+    </ServerContainer>
+  );
+
+  expect(server).toMatchInlineSnapshot(
+    `"<div><div>Profile undefined</div><div>Updates {&quot;user&quot;:&quot;john&quot;}</div></div>"`
+  );
+});
+
+test('gets the current options', () => {
+  const createTabNavigator = createNavigatorFactory((props: any) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      TabRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route) => (
+          <div key={route.key}>{descriptors[route.key].render()}</div>
+        ))}
+      </NavigationContent>
+    );
+  });
+
+  const Tab = createTabNavigator();
+
+  const TestScreen = ({ route }: any): any =>
+    `${route.name} ${JSON.stringify(route.params)}`;
+
+  const NestedStack = () => {
+    return (
+      <Tab.Navigator initialRouteName="Feed">
+        <Tab.Screen
+          name="Profile"
+          component={TestScreen}
+          options={{ title: 'My profile' }}
+        />
+        <Tab.Screen
+          name="Settings"
+          component={TestScreen}
+          options={{ title: 'Configure' }}
+        />
+        <Tab.Screen
+          name="Feed"
+          component={TestScreen}
+          options={{ title: 'News feed' }}
+        />
+        <Tab.Screen
+          name="Updates"
+          component={TestScreen}
+          options={{ title: 'Updates from cloud', description: 'Woah' }}
+        />
+      </Tab.Navigator>
+    );
+  };
+
+  const ref = React.createRef<ServerContainerRef>();
+
+  renderToString(
+    <ServerContainer ref={ref}>
+      <NavigationContainer
+        initialState={{
+          routes: [
+            {
+              name: 'Others',
+              state: {
+                routes: [{ name: 'Updates' }],
+              },
+            },
+          ],
+        }}
+      >
+        <Tab.Navigator>
+          <Tab.Screen
+            name="Home"
+            component={TestScreen}
+            options={{ title: 'My app' }}
+          />
+          <Tab.Screen
+            name="Others"
+            component={NestedStack}
+            options={{ title: 'Other stuff' }}
+          />
+        </Tab.Navigator>
+      </NavigationContainer>
+    </ServerContainer>
+  );
+
+  expect(ref.current?.getCurrentOptions()).toEqual({
+    title: 'Updates from cloud',
+    description: 'Woah',
+  });
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/createMemoryHistory.test.tsx b/node_modules/@react-navigation/native/src/__tests__/createMemoryHistory.test.tsx
new file mode 100644
index 0000000..0a8590f
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/createMemoryHistory.test.tsx
@@ -0,0 +1,160 @@
+import { expect, jest, test } from '@jest/globals';
+import type { NavigationState } from '@react-navigation/core';
+
+import { window } from '../__stubs__/window';
+import { createMemoryHistory } from '../createMemoryHistory';
+
+Object.assign(global, window);
+
+// eslint-disable-next-line import-x/extensions
+jest.mock('../useLinking', () => require('../useLinking.tsx'));
+
+test('will not attempt to navigate beyond whatever browser history it is possible to know about', () => {
+  jest.useFakeTimers();
+  const windowGoSpy = jest.spyOn(window.history, 'go');
+
+  // Create a new memory history
+  const history = createMemoryHistory();
+
+  const mockStateOne: NavigationState = {
+    key: 'stack-123',
+    index: 0,
+    routeNames: ['One', 'Two', 'Three'],
+    routes: [
+      {
+        name: 'One',
+        path: '/route-one',
+        key: 'One-23',
+        params: undefined,
+      },
+    ],
+    type: 'stack',
+    stale: false,
+  };
+
+  // When we add a path and state value then our index value will be zero
+  history.replace({ path: '/route-one', state: mockStateOne });
+  expect(history.index).toBe(0);
+
+  // When we try to call history.go() with a negative value and there is nowhere to navigate to
+  // Then window.history.go() should not be called at all
+  history.go(-1);
+  jest.runAllTimers();
+  expect(windowGoSpy).not.toHaveBeenCalled();
+  expect(history.index).toBe(0);
+
+  // When we push another item then window history should stay synced with memory history and our index should advance
+  const mockStateTwo: NavigationState = {
+    key: 'stack-123',
+    index: 1,
+    routeNames: ['One', 'Two', 'Three'],
+    routes: [
+      {
+        name: 'One',
+        path: '/route-one',
+        key: 'One-23',
+        params: undefined,
+      },
+      {
+        name: 'Two',
+        path: '/route-two',
+        key: 'Two-34',
+        params: {},
+      },
+    ],
+    type: 'stack',
+    stale: false,
+  };
+  history.push({ path: '/route-two', state: mockStateTwo });
+  expect(history.index).toBe(1);
+
+  // When we navigate back our index should be updated
+  history.go(-1);
+  jest.runAllTimers();
+  expect(windowGoSpy).toHaveBeenCalledTimes(1);
+  expect(history.index).toBe(0);
+
+  // When we navigate forward once then we should see our index change
+  history.go(1);
+  jest.runAllTimers();
+  expect(windowGoSpy).toHaveBeenCalledTimes(2);
+  expect(history.index).toBe(1);
+
+  // If we try to go very far outside of the current bounds of memory history then we
+  // will find ourselves in the same place.
+  history.go(10);
+  jest.runAllTimers();
+  expect(windowGoSpy).toHaveBeenCalledTimes(2);
+  expect(history.index).toBe(1);
+
+  // Navigate back to the first index
+  history.go(-1);
+  jest.runAllTimers();
+  expect(history.index).toBe(0);
+  expect(windowGoSpy).toHaveBeenCalledTimes(3);
+
+  const item = history.get(0);
+  expect(window.history.state).toEqual({ id: item.id });
+
+  // Next replace the state and verify the item we are replacing
+  // has the same id but the path has changed
+  const mockStateThree: NavigationState = {
+    key: 'stack-123',
+    index: 0,
+    routeNames: ['One', 'Two', 'Three'],
+    routes: [
+      {
+        name: 'Three',
+        path: '/route-three',
+        key: 'Three-23',
+        params: undefined,
+      },
+      {
+        name: 'Two',
+        path: '/route-two',
+        key: 'Two-23',
+        params: undefined,
+      },
+    ],
+    type: 'stack',
+    stale: false,
+  };
+  history.replace({ path: '/route-three', state: mockStateThree });
+  expect(history.index).toBe(0);
+
+  const replacedItem = history.get(0);
+  expect(item.path).toBe('/route-one');
+  expect(replacedItem.path).toBe('/route-three');
+  expect(item.id).toEqual(replacedItem.id);
+  expect(window.history.state).toEqual({ id: replacedItem.id });
+
+  // Push another item
+  const mockStateFour: NavigationState = {
+    key: 'stack-123',
+    index: 1,
+    routeNames: ['One', 'Two', 'Three'],
+    routes: [
+      {
+        name: 'Three',
+        path: '/route-three',
+        key: 'Three-23',
+        params: undefined,
+      },
+      {
+        name: 'One',
+        path: '/route-one',
+        key: 'One-23',
+        params: undefined,
+      },
+    ],
+    type: 'stack',
+    stale: false,
+  };
+
+  // Pushing a new route will remove any items after the new index
+  history.push({ path: '/route-one', state: mockStateFour });
+  expect(history.index).toBe(1);
+  expect(history.get(0).path).toBe('/route-three');
+  const newItem = history.get(1);
+  expect(window.history.state).toEqual({ id: newItem.id });
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/createStaticNavigation.test.tsx b/node_modules/@react-navigation/native/src/__tests__/createStaticNavigation.test.tsx
new file mode 100644
index 0000000..169f063
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/createStaticNavigation.test.tsx
@@ -0,0 +1,199 @@
+import { expect, jest, test } from '@jest/globals';
+import {
+  createNavigationContainerRef,
+  createNavigatorFactory,
+  type ParamListBase,
+  StackRouter,
+  TabRouter,
+  useNavigationBuilder,
+} from '@react-navigation/core';
+import { act, render, waitFor } from '@testing-library/react-native';
+
+import { window } from '../__stubs__/window';
+import { createStaticNavigation } from '../createStaticNavigation';
+
+Object.assign(global, window);
+
+// We want to use the web version of useLinking
+// eslint-disable-next-line import-x/extensions
+jest.mock('../useLinking', () => require('../useLinking.tsx'));
+
+test('integrates with the history API', async () => {
+  const createStackNavigator = createNavigatorFactory((props: any) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      StackRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route, i) => (
+          <div key={route.key} aria-current={state.index === i || undefined}>
+            {descriptors[route.key].render()}
+          </div>
+        ))}
+      </NavigationContent>
+    );
+  });
+
+  const createTabNavigator = createNavigatorFactory((props: any) => {
+    const { state, descriptors, NavigationContent } = useNavigationBuilder(
+      TabRouter,
+      props
+    );
+
+    return (
+      <NavigationContent>
+        {state.routes.map((route, i) => (
+          <div key={route.key} aria-current={state.index === i || undefined}>
+            {descriptors[route.key].render()}
+          </div>
+        ))}
+      </NavigationContent>
+    );
+  });
+
+  const TestScreen = ({ route }: any): any =>
+    `${route.name} ${JSON.stringify(route.params)}`;
+
+  const Stack = createStackNavigator({
+    initialRouteName: 'Feed',
+    screens: {
+      Profile: {
+        screen: TestScreen,
+        linking: ':user',
+      },
+      Settings: {
+        screen: TestScreen,
+        linking: 'edit',
+      },
+      Updates: {
+        screen: TestScreen,
+        linking: 'updates',
+      },
+      Feed: {
+        screen: TestScreen,
+        linking: 'feed',
+      },
+    },
+  });
+
+  const Tab = createTabNavigator({
+    screens: {
+      Home: Stack,
+      Chat: {
+        screen: TestScreen,
+        linking: 'chat',
+      },
+    },
+  });
+
+  const Navigation = createStaticNavigation(Tab);
+
+  const navigation = createNavigationContainerRef<ParamListBase>();
+
+  render(
+    <Navigation
+      ref={navigation}
+      linking={{
+        prefixes: [],
+      }}
+    />
+  );
+
+  expect(window.location.pathname).toBe('/feed');
+
+  act(() => navigation.current?.navigate('Profile', { user: 'jane' }));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => navigation.current?.navigate('Updates'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/updates'));
+
+  act(() => navigation.current?.goBack());
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => {
+    window.history.back();
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/feed'));
+
+  act(() => {
+    window.history.forward();
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/jane'));
+
+  act(() => navigation.current?.navigate('Settings'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/edit'));
+
+  act(() => {
+    window.history.go(-2);
+  });
+
+  await waitFor(() => expect(window.location.pathname).toBe('/feed'));
+
+  act(() => navigation.current?.navigate('Settings'));
+  act(() => navigation.current?.navigate('Chat'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/chat'));
+
+  act(() => navigation.current?.navigate('Home'));
+
+  await waitFor(() => expect(window.location.pathname).toBe('/edit'));
+});
+
+test("throws if linking is enabled but there's no linking configuration", () => {
+  const createTestNavigator = createNavigatorFactory(() => null);
+
+  const TestScreen = () => null;
+
+  const Stack = createTestNavigator({
+    initialRouteName: 'Feed',
+    screens: {
+      Profile: {
+        screen: TestScreen,
+      },
+      Settings: {
+        screen: TestScreen,
+      },
+      Updates: {
+        screen: TestScreen,
+      },
+      Feed: {
+        screen: TestScreen,
+      },
+    },
+  });
+
+  const Tab = createTestNavigator({
+    screens: {
+      Home: Stack,
+      Chat: {
+        screen: TestScreen,
+      },
+    },
+  });
+
+  const Navigation = createStaticNavigation(Tab);
+
+  expect(() => {
+    render(<Navigation linking={{ enabled: true, prefixes: ['myapp://'] }} />);
+  }).toThrow(
+    'Linking is enabled but no linking configuration was found for the screens.'
+  );
+
+  expect(() => {
+    render(<Navigation linking={{ enabled: false, prefixes: ['myapp://'] }} />);
+  }).not.toThrow();
+
+  expect(() => {
+    render(
+      <Navigation linking={{ enabled: 'auto', prefixes: ['myapp://'] }} />
+    );
+  }).not.toThrow();
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/extractPathFromURL.test.tsx b/node_modules/@react-navigation/native/src/__tests__/extractPathFromURL.test.tsx
new file mode 100644
index 0000000..3738dd7
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/extractPathFromURL.test.tsx
@@ -0,0 +1,344 @@
+import { expect, test } from '@jest/globals';
+
+import { extractPathFromURL } from '../extractPathFromURL';
+
+test('extracts path from URL with protocol', () => {
+  expect(extractPathFromURL(['scheme://'], 'scheme://some/path')).toBe(
+    'some/path'
+  );
+
+  expect(extractPathFromURL(['scheme://'], 'scheme:some/path')).toBe(
+    'some/path'
+  );
+
+  expect(extractPathFromURL(['scheme://'], 'scheme:///some/path')).toBe(
+    'some/path'
+  );
+
+  expect(extractPathFromURL(['scheme:///'], 'scheme:some/path')).toBe(
+    'some/path'
+  );
+
+  expect(extractPathFromURL(['scheme:'], 'scheme:some/path')).toBe('some/path');
+
+  expect(extractPathFromURL(['scheme:'], 'scheme://some/path')).toBe(
+    'some/path'
+  );
+
+  expect(extractPathFromURL(['scheme:'], 'scheme:///some/path')).toBe(
+    'some/path'
+  );
+});
+
+test('extracts path from URL with protocol and host', () => {
+  expect(
+    extractPathFromURL(
+      ['scheme://example.com'],
+      'scheme://example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme:example.com/some/path')
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme://example.com'],
+      'scheme:///example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:///example.com'],
+      'scheme:example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(['scheme:example.com'], 'scheme:example.com/some/path')
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(['scheme:example.com'], 'scheme://example.com/some/path')
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com'],
+      'scheme:///example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme://example.com/')
+  ).toBe('/');
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme://example.com')
+  ).toBe('');
+});
+
+test('extracts path from URL with protocol and host with wildcard', () => {
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme://test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme:test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme:///test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:///*.example.com'],
+      'scheme:test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme:test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme://test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme:///test.example.com/some/path'
+    )
+  ).toBe('/some/path');
+});
+
+test('extracts path from URL with protocol, host and path', () => {
+  expect(
+    extractPathFromURL(
+      ['scheme://example.com/test'],
+      'scheme://example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme:example.com/some/path')
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme://example.com/test'],
+      'scheme:///example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:///example.com/test'],
+      'scheme:example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme:example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme://example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme:///example.com/test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme:///example.com//test/some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme:///example.com/test//some/path'
+    )
+  ).toBe('/some/path');
+
+  expect(
+    extractPathFromURL(
+      ['scheme:example.com/test'],
+      'scheme:///example.com/test/some//path'
+    )
+  ).toBe('/some/path');
+});
+
+test('returns undefined for non-matching protocol', () => {
+  expect(extractPathFromURL(['scheme://'], 'foo://some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme://'], 'foo:some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme://'], 'foo:///some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme:///'], 'foo:some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme:'], 'foo:some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme:'], 'foo://some/path')).toBeUndefined();
+
+  expect(extractPathFromURL(['scheme:'], 'foo:///some/path')).toBeUndefined();
+});
+
+test('returns undefined for non-matching path', () => {
+  expect(
+    extractPathFromURL(['scheme://foo'], 'scheme://some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme://foo'], 'scheme:some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme://foo'], 'scheme:///some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:///foo'], 'scheme:some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:foo'], 'scheme:some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:foo'], 'scheme://some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:foo'], 'scheme:///some/path')
+  ).toBeUndefined();
+});
+
+test('returns undefined for non-matching host', () => {
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme://foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme:foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme://example.com'], 'scheme:///foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:///example.com'], 'scheme:foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:example.com'], 'scheme:foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:example.com'], 'scheme://foo.com/some/path')
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(['scheme:example.com'], 'scheme:///foo.com/some/path')
+  ).toBeUndefined();
+});
+
+test('returns undefined for non-matching host with wildcard', () => {
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme://test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme:test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme://*.example.com'],
+      'scheme:///test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme:///*.example.com'],
+      'scheme:test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme:test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme://test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+
+  expect(
+    extractPathFromURL(
+      ['scheme:*.example.com'],
+      'scheme:///test.foo.com/some/path'
+    )
+  ).toBeUndefined();
+});
+
+test('returns a valid search query when it has a url as param', () => {
+  expect(
+    extractPathFromURL(
+      ['https://mysite.com'],
+      'https://mysite.com/readPolicy?url=https://test.com'
+    )
+  ).toBe('/readPolicy?url=https://test.com');
+
+  expect(
+    extractPathFromURL(
+      ['https://mysite.com'],
+      'https://mysite.com/readPolicy?url=https://test.com?param=1'
+    )
+  ).toBe('/readPolicy?url=https://test.com?param=1');
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/useLinkBuilder.test.tsx b/node_modules/@react-navigation/native/src/__tests__/useLinkBuilder.test.tsx
new file mode 100644
index 0000000..fcf578d
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/useLinkBuilder.test.tsx
@@ -0,0 +1,330 @@
+import { expect, test } from '@jest/globals';
+import { NavigationRouteContext } from '@react-navigation/core';
+import { render } from '@testing-library/react-native';
+
+import { createStackNavigator } from '../__stubs__/createStackNavigator';
+import { NavigationContainer } from '../NavigationContainer';
+import { useLinkBuilder } from '../useLinkBuilder';
+
+const config = {
+  prefixes: ['https://example.com'],
+  config: {
+    screens: {
+      Foo: {
+        path: 'foo',
+        screens: {
+          Bar: 'bar/:id',
+        },
+      },
+    },
+  },
+  getInitialURL() {
+    return null;
+  },
+};
+
+test('builds href outside of a navigator', () => {
+  expect.assertions(1);
+
+  const Root = () => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Foo');
+
+    expect(href).toBe('/foo');
+
+    return null;
+  };
+
+  render(
+    <NavigationContainer linking={config}>
+      <Root />
+    </NavigationContainer>
+  );
+});
+
+test('builds href in navigator layout', () => {
+  expect.assertions(1);
+
+  const Test = ({ children }: { children: React.ReactNode }) => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Foo');
+
+    expect(href).toBe('/foo');
+
+    return children;
+  };
+
+  const Stack = createStackNavigator<{ Foo: undefined }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <Stack.Navigator layout={({ children }) => <Test>{children}</Test>}>
+        <Stack.Screen name="Foo">{() => null}</Stack.Screen>
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds href in route context', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Foo');
+
+    expect(href).toBe('/foo');
+
+    return null;
+  };
+
+  const Stack = createStackNavigator<{ Foo: undefined }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <Stack.Navigator
+        layout={({ state }) => (
+          <NavigationRouteContext.Provider
+            value={state.routes.find((r) => r.name === 'Foo')}
+          >
+            <Test />
+          </NavigationRouteContext.Provider>
+        )}
+      >
+        <Stack.Screen name="Foo">{() => null}</Stack.Screen>
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds href in stack navigator screen', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Foo');
+
+    expect(href).toBe('/foo');
+
+    return null;
+  };
+
+  const StackA = createStackNavigator<{ Foo: undefined }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="Foo" component={Test} />
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds href in nested navigator layout', () => {
+  expect.assertions(1);
+
+  const Test = ({ children }: { children: React.ReactNode }) => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Bar', { id: '42' });
+
+    expect(href).toBe('/foo/bar/42');
+
+    return children;
+  };
+
+  const StackA = createStackNavigator<{ Foo: undefined }>();
+  const StackB = createStackNavigator<{ Bar: { id: string } }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="Foo">
+          {() => (
+            <StackB.Navigator
+              layout={({ children }) => <Test>{children}</Test>}
+            >
+              <StackB.Screen name="Bar">{() => null}</StackB.Screen>
+            </StackB.Navigator>
+          )}
+        </StackA.Screen>
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds href in nested route context', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Bar', { id: '42' });
+
+    expect(href).toBe('/foo/bar/42');
+
+    return null;
+  };
+
+  const StackA = createStackNavigator<{ Foo: undefined }>();
+  const StackB = createStackNavigator<{ Bar: { id: string } }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="Foo">
+          {() => (
+            <StackB.Navigator
+              layout={({ state }) => (
+                <NavigationRouteContext.Provider
+                  value={state.routes.find((r) => r.name === 'Bar')}
+                >
+                  <Test />
+                </NavigationRouteContext.Provider>
+              )}
+            >
+              <StackB.Screen name="Bar">{() => null}</StackB.Screen>
+            </StackB.Navigator>
+          )}
+        </StackA.Screen>
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds href in nested navigator screen', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildHref } = useLinkBuilder();
+
+    const href = buildHref('Bar', { id: '42' });
+
+    expect(href).toBe('/foo/bar/42');
+
+    return null;
+  };
+
+  const StackA = createStackNavigator<{ Foo: undefined }>();
+  const StackB = createStackNavigator<{ Bar: { id: string } }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="Foo">
+          {() => (
+            <StackB.Navigator>
+              <StackB.Screen name="Bar" component={Test} />
+            </StackB.Navigator>
+          )}
+        </StackA.Screen>
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds action from href outside of a navigator', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildAction } = useLinkBuilder();
+
+    const action = buildAction('/foo');
+
+    expect(action).toEqual({
+      type: 'NAVIGATE',
+      payload: {
+        name: 'Foo',
+        path: '/foo',
+        params: {},
+        pop: true,
+      },
+    });
+
+    return null;
+  };
+
+  render(
+    <NavigationContainer linking={config}>
+      <Test />
+    </NavigationContainer>
+  );
+});
+
+test('builds action from href in navigator screen', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildAction } = useLinkBuilder();
+
+    const action = buildAction('/foo');
+
+    expect(action).toEqual({
+      type: 'NAVIGATE',
+      payload: {
+        name: 'Foo',
+        path: '/foo',
+        params: {},
+        pop: true,
+      },
+    });
+
+    return null;
+  };
+
+  const Stack = createStackNavigator<{ Foo: undefined }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <Stack.Navigator>
+        <Stack.Screen name="Foo" component={Test} />
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+});
+
+test('builds action from href in nested navigator', () => {
+  expect.assertions(1);
+
+  const Test = () => {
+    const { buildAction } = useLinkBuilder();
+
+    const action = buildAction('/foo/bar/42');
+
+    expect(action).toEqual({
+      type: 'NAVIGATE',
+      payload: {
+        name: 'Foo',
+        params: {
+          initial: true,
+          screen: 'Bar',
+          params: { id: '42' },
+          path: '/foo/bar/42',
+        },
+        pop: true,
+      },
+    });
+
+    return null;
+  };
+
+  const StackA = createStackNavigator<{ Foo: undefined }>();
+  const StackB = createStackNavigator<{ Bar: { id: string } }>();
+
+  render(
+    <NavigationContainer linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="Foo">
+          {() => (
+            <StackB.Navigator>
+              <StackB.Screen name="Bar" component={Test} />
+            </StackB.Navigator>
+          )}
+        </StackA.Screen>
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/useLinking.test.tsx b/node_modules/@react-navigation/native/src/__tests__/useLinking.test.tsx
new file mode 100644
index 0000000..6bbbf44
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/useLinking.test.tsx
@@ -0,0 +1,72 @@
+import { expect, jest, test } from '@jest/globals';
+import {
+  createNavigationContainerRef,
+  type ParamListBase,
+} from '@react-navigation/core';
+import { render, type RenderAPI } from '@testing-library/react-native';
+
+import { useLinking } from '../useLinking';
+
+test('throws if multiple instances of useLinking are used', () => {
+  const ref = createNavigationContainerRef<ParamListBase>();
+
+  const options = { prefixes: [] };
+
+  function Sample() {
+    useLinking(ref, options, () => {});
+    useLinking(ref, options, () => {});
+    return null;
+  }
+
+  const spy = jest.spyOn(console, 'error').mockImplementation(() => {});
+
+  let element: RenderAPI | undefined;
+
+  element = render(<Sample />);
+
+  expect(spy).toHaveBeenCalledTimes(1);
+  expect(spy.mock.calls[0][0]).toMatch(
+    'Looks like you have configured linking in multiple places.'
+  );
+
+  element?.unmount();
+
+  function A() {
+    useLinking(ref, options, () => {});
+    return null;
+  }
+
+  function B() {
+    useLinking(ref, options, () => {});
+    return null;
+  }
+
+  element = render(
+    <>
+      <A />
+      <B />
+    </>
+  );
+
+  expect(spy).toHaveBeenCalledTimes(2);
+  expect(spy.mock.calls[1][0]).toMatch(
+    'Looks like you have configured linking in multiple places.'
+  );
+
+  element?.unmount();
+
+  function Sample2() {
+    useLinking(ref, options, () => {});
+    return null;
+  }
+
+  const wrapper2 = <Sample2 />;
+
+  render(wrapper2).unmount();
+
+  render(wrapper2);
+
+  expect(spy).toHaveBeenCalledTimes(2);
+
+  element?.unmount();
+});
diff --git a/node_modules/@react-navigation/native/src/__tests__/useRoutePath.test.tsx b/node_modules/@react-navigation/native/src/__tests__/useRoutePath.test.tsx
new file mode 100644
index 0000000..7553ff6
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/__tests__/useRoutePath.test.tsx
@@ -0,0 +1,120 @@
+import { expect, test } from '@jest/globals';
+import {
+  createNavigationContainerRef,
+  NavigationRouteContext,
+  type NavigatorScreenParams,
+} from '@react-navigation/core';
+import { act, render, screen } from '@testing-library/react-native';
+import * as React from 'react';
+
+import { createStackNavigator } from '../__stubs__/createStackNavigator';
+import { NavigationContainer } from '../NavigationContainer';
+import { useRoutePath } from '../useRoutePath';
+
+const config = {
+  prefixes: ['https://example.com'],
+  config: {
+    screens: {
+      a: {
+        path: 'foo',
+        screens: {
+          b: 'bar/:id',
+          c: {
+            path: 'baz',
+            exact: true,
+          },
+        },
+      },
+      b: 'qux',
+    },
+  },
+  getInitialURL() {
+    return null;
+  },
+};
+
+const Test = () => {
+  const route = React.useContext(NavigationRouteContext);
+  const path = useRoutePath();
+
+  return `${route?.name}: ${path}`;
+};
+
+test('throws when not rendered inside a screen', () => {
+  expect(() => {
+    render(
+      <NavigationContainer linking={config}>
+        <Test />
+      </NavigationContainer>
+    );
+  }).toThrow(
+    "Couldn't find a state for the route object. Is your component inside a screen in a navigator?"
+  );
+});
+
+test('gets path for route in root navigator screen', () => {
+  type RootStackParamList = {
+    a: undefined;
+    b: { count: number };
+  };
+
+  const Stack = createStackNavigator<RootStackParamList>();
+
+  const navigation = createNavigationContainerRef<RootStackParamList>();
+
+  render(
+    <NavigationContainer ref={navigation} linking={config}>
+      <Stack.Navigator>
+        <Stack.Screen name="a" component={Test} />
+        <Stack.Screen name="b" component={Test} />
+      </Stack.Navigator>
+    </NavigationContainer>
+  );
+
+  expect(screen).toMatchInlineSnapshot(`"a: /foo"`);
+
+  act(() => navigation.navigate('b', { count: 42 }));
+
+  expect(screen).toMatchInlineSnapshot(`"b: /qux?count=42"`);
+});
+
+test('gets path for route in nested navigator screen', () => {
+  type AStackParamList = {
+    a: NavigatorScreenParams<BStackParamList>;
+  };
+
+  type BStackParamList = {
+    b: { id: string };
+    c: undefined;
+  };
+
+  const StackA = createStackNavigator<AStackParamList>();
+  const StackB = createStackNavigator<BStackParamList>();
+
+  const navigation = createNavigationContainerRef<AStackParamList>();
+
+  render(
+    <NavigationContainer ref={navigation} linking={config}>
+      <StackA.Navigator>
+        <StackA.Screen name="a">
+          {() => (
+            <StackB.Navigator>
+              <StackB.Screen
+                name="b"
+                component={Test}
+                initialParams={{ id: 'apple' }}
+              />
+              <StackB.Screen name="c" component={Test} />
+            </StackB.Navigator>
+          )}
+        </StackA.Screen>
+      </StackA.Navigator>
+    </NavigationContainer>
+  );
+
+  expect(screen).toMatchInlineSnapshot(`"b: /foo/bar/apple"`);
+
+  act(() => navigation.navigate('a', { screen: 'c' }));
+
+  expect(screen).toMatchInlineSnapshot(`"c: /baz"`);
+});
diff --git a/node_modules/@react-navigation/native/src/createMemoryHistory.tsx b/node_modules/@react-navigation/native/src/createMemoryHistory.tsx
index 1568263..837baa7 100644
--- a/node_modules/@react-navigation/native/src/createMemoryHistory.tsx
+++ b/node_modules/@react-navigation/native/src/createMemoryHistory.tsx
@@ -1,6 +1,8 @@
 import type { NavigationState } from '@react-navigation/core';
 import { nanoid } from 'nanoid/non-secure';
 
+import { findFocusedRouteKey } from './findFocusedRouteKey';
+
 type HistoryRecord = {
   // Unique identifier for this record to match it with window.history.state
   id: string;
@@ -28,7 +30,11 @@ export function createMemoryHistory() {
     });
   };
 
-  const history = {
+  return {
+    get items(): HistoryRecord[] {
+      return items;
+    },
+
     get index(): number {
       // We store an id in the state instead of an index
       // Index could get out of sync with in-memory values if page reloads
@@ -47,12 +53,15 @@ export function createMemoryHistory() {
       return items[index];
     },
 
-    backIndex({ path }: { path: string }) {
+    backIndex({ path, state }: { path: string; state: NavigationState }) {
       // We need to find the index from the element before current to get closest path to go back to
       for (let i = index - 1; i >= 0; i--) {
         const item = items[i];
 
-        if (item.path === path) {
+        if (
+          item.path === path &&
+          findFocusedRouteKey(item.state) === findFocusedRouteKey(state)
+        ) {
           return i;
         }
       }
@@ -86,7 +95,7 @@ export function createMemoryHistory() {
 
       // Need to keep the hash part of the path if there was no previous history entry
       // or the previous history entry had the same path
-      let pathWithHash = path;
+      let pathWithHash = path.replace(/(\/{2,})/g, '/');
       const hash = pathWithHash.includes('#') ? '' : location.hash;
 
       if (!items.length || items.findIndex((item) => item.id === id) < 0) {
@@ -224,6 +233,4 @@ export function createMemoryHistory() {
       return () => window.removeEventListener('popstate', onPopState);
     },
   };
-
-  return history;
 }
diff --git a/node_modules/@react-navigation/native/src/findFocusedRouteKey.ts b/node_modules/@react-navigation/native/src/findFocusedRouteKey.ts
new file mode 100644
index 0000000..5eae62d
--- /dev/null
+++ b/node_modules/@react-navigation/native/src/findFocusedRouteKey.ts
@@ -0,0 +1,7 @@
+import { findFocusedRoute } from '@react-navigation/core';
+import type { InitialState } from '@react-navigation/routers';
+
+export function findFocusedRouteKey(state: InitialState) {
+  const focusedRoute = findFocusedRoute(state);
+  return focusedRoute?.key;
+}
diff --git a/node_modules/@react-navigation/native/src/useLinking.tsx b/node_modules/@react-navigation/native/src/useLinking.tsx
index a33b493..395803f 100644
--- a/node_modules/@react-navigation/native/src/useLinking.tsx
+++ b/node_modules/@react-navigation/native/src/useLinking.tsx
@@ -6,12 +6,14 @@ import {
   type NavigationContainerRef,
   type NavigationState,
   type ParamListBase,
+  type PartialState,
   useNavigationIndependentTree,
 } from '@react-navigation/core';
 import isEqual from 'fast-deep-equal';
 import * as React from 'react';
 
 import { createMemoryHistory } from './createMemoryHistory';
+import { findFocusedRouteKey } from './findFocusedRouteKey';
 import { ServerContext } from './ServerContext';
 import type { LinkingOptions } from './types';
 
@@ -71,6 +73,56 @@ export const series = (cb: () => Promise<void>) => {
 
 const linkingHandlers: symbol[] = [];
 
+function getAllStateKeys(
+  state: NavigationState | PartialState<NavigationState>
+) {
+  const current = state;
+  const keys: (string | undefined)[] = [];
+  if (current.routes) {
+    for (const route of current.routes) {
+      keys.push(route.key);
+      if (route.state) {
+        keys.push(...getAllStateKeys(route.state));
+      }
+    }
+  }
+  return keys;
+}
+
+function getStaleHistoryDiff(items: string | any[], newState: NavigationState) {
+  const newStateKeys = getAllStateKeys(newState);
+  for (let i = items.length - 1; i >= 0; i--) {
+    const itemFocusedKey = findFocusedRouteKey(items[i].state);
+    if (newStateKeys.includes(itemFocusedKey)) {
+      return items.length - i - 1;
+    }
+  }
+  return -1;
+}
+
+function getHistoryDeltaByKeys(
+  focusedState: { routes: { key: any }[] },
+  previousFocusedState: { routes: { key: any }[] }
+) {
+  const focusedStateKeys = focusedState.routes.map((r: { key: any }) => r.key);
+  const previousFocusedStateKeys = previousFocusedState.routes.map(
+    (r: { key: any }) => r.key
+  );
+  const minLength = Math.min(
+    focusedStateKeys.length,
+    previousFocusedStateKeys.length
+  );
+  let matchingKeys = 0;
+  for (let i = 0; i < minLength; i++) {
+    if (focusedStateKeys[i] === previousFocusedStateKeys[i]) {
+      matchingKeys++;
+    } else {
+      break;
+    }
+  }
+  return -(previousFocusedStateKeys.length - matchingKeys);
+}
+
 type Options = LinkingOptions<ParamListBase>;
 
 export function useLinking(
@@ -388,6 +440,12 @@ export function useLinking(
             ? previousFocusedState.history.length
             : previousFocusedState.routes.length);
 
+        // The historyDelta and historyDeltaByKeys may differ if the new state has an entry that didn't exist in previous state
+        const historyDeltaByKeys = getHistoryDeltaByKeys(
+          focusedState,
+          previousFocusedState
+        );
+
         if (historyDelta > 0) {
           // If history length is increased, we should pushState
           // Note that path might not actually change here, for example, drawer open should pushState
@@ -395,7 +453,7 @@ export function useLinking(
         } else if (historyDelta < 0) {
           // If history length is decreased, i.e. entries were removed, we want to go back
 
-          const nextIndex = history.backIndex({ path });
+          const nextIndex = history.backIndex({ path, state });
           const currentIndex = history.index;
 
           try {
@@ -407,11 +465,17 @@ export function useLinking(
             ) {
               // An existing entry for this path exists and it's less than current index, go back to that
               await history.go(nextIndex - currentIndex);
+              history.replace({ path, state });
             } else {
               // We couldn't find an existing entry to go back to, so we'll go back by the delta
               // This won't be correct if multiple routes were pushed in one go before
               // Usually this shouldn't happen and this is a fallback for that
-              await history.go(historyDelta);
+              await history.go(historyDeltaByKeys);
+              if (historyDeltaByKeys + 1 === historyDelta) {
+                history.push({ path, state });
+              } else {
+                history.replace({ path, state });
+              }
             }
 
             // Store the updated state as well as fix the path if incorrect
@@ -421,7 +485,19 @@ export function useLinking(
           }
         } else {
           // If history length is unchanged, we want to replaceState
-          history.replace({ path, state });
+          // and remove any entries from history which focused route no longer exists in state
+          // That may happen if we replace a whole navigator.
+
+          const staleHistoryDiff = getStaleHistoryDiff(
+            history.items.slice(0, history.index + 1),
+            state
+          );
+          if (staleHistoryDiff <= 0) {
+            history.replace({ path, state });
+          } else {
+            await history.go(-staleHistoryDiff);
+            history.push({ path, state });
+          }
         }
       } else {
         // If no common navigation state was found, assume it's a replace
diff --git a/node_modules/@react-navigation/native/tsconfig.build.json b/node_modules/@react-navigation/native/tsconfig.build.json
new file mode 100644
index 0000000..543a787
--- /dev/null
+++ b/node_modules/@react-navigation/native/tsconfig.build.json
@@ -0,0 +1,6 @@
+{
+  "extends": "./tsconfig",
+  "compilerOptions": {
+    "paths": {}
+  }
+}
diff --git a/node_modules/@react-navigation/native/tsconfig.json b/node_modules/@react-navigation/native/tsconfig.json
new file mode 100644
index 0000000..066034d
--- /dev/null
+++ b/node_modules/@react-navigation/native/tsconfig.json
@@ -0,0 +1,11 @@
+{
+  "extends": "../../tsconfig",
+  "references": [
+    { "path": "../core" },
+    { "path": "../routers" }
+  ],
+  "compilerOptions": {
+    "rootDir": ".",
+    "outDir": "./lib/typescript"
+  }
+}
