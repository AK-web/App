name: Test Coverage

on:
  pull_request:
    types: [opened, synchronize]
    branches-ignore: [staging, production]
    paths: ['src/**/*.ts', 'src/**/*.tsx', 'src/**/*.js', 'src/**/*.jsx']

jobs:
  coverage:
    if: |
      github.actor != 'OSBotify' &&
      github.actor != 'imgbot[bot]' &&
      github.actor != 'github-actions' &&
      github.actor != 'melvin-bot' &&
      github.actor != 'BlameGPT' &&
      !github.event.pull_request.draft
    runs-on: ubuntu-latest
    name: Generate coverage report
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git for OSBotify
        uses: Expensify/GitHub-Actions/setupGitForOSBotify@main
        id: setupGitForOSBotify
        with:
          OP_VAULT: ${{ vars.OP_VAULT }}
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          OS_BOTIFY_APP_ID: ${{ secrets.OS_BOTIFY_APP_ID }}
          OS_BOTIFY_PRIVATE_KEY: ${{ secrets.OS_BOTIFY_PRIVATE_KEY }}

      - name: Setup Node
        uses: ./.github/actions/composite/setupNode

      - name: Check Changed Coverage src/ Files
        id: check-src-changes
        run: ./.github/scripts/checkCoverageChanges.sh

      - name: Wait for Jest Tests to Complete
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        uses: ./.github/actions/javascript/waitforJestTests
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run Coverage for Changed Files
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        run: ./.github/scripts/runCoverage.sh
        env:
          CI: true

      - name: Generate Baseline Coverage From The Main Branch
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        run: ./.github/scripts/generateBaselineCoverage.sh

      - name: Upload Coverage Artifacts
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Configure AWS Credentials
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Coverage Static to S3
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        run: ./.github/scripts/deployCoverageS3.sh "${{ github.event.pull_request.number }}" "${{ github.run_id }}"

      - name: Post Coverage to PR
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        uses: ./.github/actions/javascript/postTestCoverageComment
        with:
          OS_BOTIFY_TOKEN: ${{ steps.setupGitForOSBotify.outputs.OS_BOTIFY_API_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COVERAGE_URL: ${{ env.COVERAGE_URL }}
          BASE_COVERAGE_PATH: ./baseline-coverage
