name: Ad-Hoc Remote Build iOS

on:
  workflow_dispatch:
  push:
    branches-ignore: [staging, production]
    paths-ignore: ['docs/**', 'contributingGuides/**', 'help/**', '.github/**', 'scripts/**', 'tests/**']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ${{ github.repository_owner == 'Expensify' && 'macos-15-xlarge' || 'macos-15' }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.4.0.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        include:
          - scheme: 'Expensify AdHoc'
            configuration: 'DebugAdHoc'
            is_hybrid_build: true
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: ${{ matrix.is_hybrid_build || false }}
          token: ${{ secrets.OS_BOTIFY_TOKEN }}

      - name: Configure MapBox SDK
        run: ./scripts/setup-mapbox-sdk.sh ${{ secrets.MAPBOX_SDK_DOWNLOAD_TOKEN }}

      - name: Setup Node
        uses: ./.github/actions/composite/setupNode
        with:
          IS_HYBRID_BUILD: ${{ matrix.is_hybrid_build && 'true' || 'false' }}

      - name: Install 1Password CLI  
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f

      - name: Load files from 1Password
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc/OldApp_AdHoc.mobileprovision" --force --out-file ./OldApp_AdHoc.mobileprovision
          op read "op://${{ vars.OP_VAULT }}/New Expensify Distribution Certificate/Certificates.p12" --force --out-file ./Certificates.p12
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc_Share_Extension/OldApp_AdHoc_Share_Extension.mobileprovision" --force --out-file ./OldApp_AdHoc_Share_Extension.mobileprovision
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc_Notification_Service/OldApp_AdHoc_Notification_Service.mobileprovision" --force --out-file ./OldApp_AdHoc_Notification_Service.mobileprovision
      
      - name: Load certificate and convert to base64
        id: load-certificate
        run: |
          echo "certificate-base64=$(base64 -i ./Certificates.p12)" >> "$GITHUB_OUTPUT"
      - name: Load provisioning profile and convert to base64
        id: load-provisioning-profile
        run: |
          echo "profile-base64=$(base64 -i ./OldApp_AdHoc.mobileprovision)" >> "$GITHUB_OUTPUT"

      - name: RNEF Remote Build - iOS
        # rnef v2
        uses: callstackincubator/ios@7847e0676242cefa801cba8ede6736140b7bae91 
        env:
          GITHUB_TOKEN: ${{ github.token }}
          IS_HYBRID_APP: ${{ matrix.is_hybrid_build }}
        with:
          destination: device
          github-token: ${{ github.token }}
          re-sign: true
          # ad-hoc: true
          scheme: ${{ matrix.scheme }}
          configuration: ${{ matrix.configuration }}
          certificate-base64: ${{ steps.load-certificate.outputs.certificate-base64}}
          # not sure if we have in the secrets on gh
          certificate-password: ${{ secrets.CERTIFICATE_PASSWORD || '' }}
          provisioning-profile-base64: ${{ steps.load-provisioning-profile.outputs.profile-base64}}
          # not sure if we have in the secrets on gh
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD || '' }}
          provisioning-profile-name: '(OldApp) AdHoc'
          comment-bot: false
