import groovy.json.JsonSlurper

class PatchedReactNativeArtifactsExtension {
    String packageName = 'react-hybrid'
}

def extension = project.extensions.create('patchedReactNativeArtifacts', PatchedReactNativeArtifactsExtension)

def runCommand(command) {
    def outputStream = new ByteArrayOutputStream()

    def result = project.exec {
            commandLine command
            standardOutput = outputStream
            errorOutput = System.err
    }

    return [output: outputStream.toString(), exitCode: result.exitValue]
}

def getGithubUsername() {
    return new JsonSlurper().parseText(runCommand(['gh', 'api', 'user']).output).login.trim()
}

def getGithubToken() {
    return runCommand(['gh', 'auth', 'token']).output.trim()
}

def getReactNativeVersion() {
    def packageJson = file("${rootDir}/../../package.json")
    return new JsonSlurper().parse(packageJson).dependencies.'react-native'
}

def getArtifactsCandidates() {
    def reactNativeVersion = getReactNativeVersion()
    def patchedVersions = runCommand(['gh', 'api', "/orgs/Expensify/packages/maven/com.expensify.${project.patchedReactNativeArtifacts.packageName}.react-android/versions", "--jq", ".[].name"]).output
    return patchedVersions.split("\n").findAll { it.startsWith(reactNativeVersion) }
}

def getPomFile(version) {
    return new XmlSlurper().parse(
        new URL("https://maven.pkg.github.com/Expensify/App/com/expensify/${project.patchedReactNativeArtifacts.packageName}/react-android/${version}/react-android-${version}.pom").openConnection().with {
            setRequestProperty("Authorization", "Bearer ${getGithubToken()}")
            getInputStream()
        }
    )
}

def hasDiff(commitHash) {
    // return runCommand(['git',, 'diff', '--exit-code', commitHash, '--', 'patches/react-native+*.patch', 'patches/@react-native+*.patch']).exitCode
    return 0
}

def findMatchingArtifactsVersion() {
    def candidates = getArtifactsCandidates()
    for (candidate in candidates) {
        def commitHash = getPomFile(candidate).properties.commitHash.text()
        return candidate
        if (!hasDiff(commitHash)) {
            return candidate
        }
    }

    return null
}

rootProject.allprojects { subproject ->
    subproject.repositories {
        maven {
            url "https://maven.pkg.github.com/Expensify/App"
            
            credentials {
                username = getGithubUsername()
                password = getGithubToken()
            }
        }
    }
}

afterEvaluate {
    def version = findMatchingArtifactsVersion()
    def group = "com.expensify.${project.patchedReactNativeArtifacts.packageName}"

    if (version) {
        println "Found patched ${group}:${version}"
        project.rootProject.allprojects { eachProject ->
            eachProject.configurations.all { configuration ->
                configuration.resolutionStrategy {
                    dependencySubstitution {
                        substitute(module('com.facebook.react:react-native'))
                            .using(module("${group}:react-android:${version}"))
                        substitute(module('com.facebook.react:react-android'))
                            .using(module("${group}:react-android:${version}"))
                    }
                    force "${group}:react-android:${version}"
                }
            }
        }
    }
}
